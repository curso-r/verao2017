<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Curso-R</title>
    <link>/index.xml</link>
    <description>Recent content on Curso-R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>Disponível sobre Licença MIT</copyright>
    <lastBuildDate>Tue, 27 Dec 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Exercícios: R como calculadora</title>
      <link>/r-como-calculadora/exercicios/</link>
      <pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/r-como-calculadora/exercicios/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;script src=&#34;https://cdn.datacamp.com/datacamp-light-latest.min.js&#34;&gt;&lt;/script&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Calcule o número de ouro no R.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ \frac{1 + \sqrt{5}}{2} \]&lt;/span&gt;&lt;/p&gt;
&lt;iframe&gt;
&lt;div data-datacamp-exercise=&#34;&#34; data-height=&#34;300&#34; data-encoded=&#34;true&#34;&gt;
eyJsYW5ndWFnZSI6InIiLCJzYW1wbGUiOiIjIERpZ2l0ZSBhIGV4cHJlc3NcdTAwZTNvIHF1ZSBjYWxjdWxhIG8gblx1MDBmYW1lcm8gZGUgb3Vyby5cbiIsInNvbHV0aW9uIjoiIyBEaWdpdGUgYSBleHByZXNzXHUwMGUzbyBxdWUgY2FsY3VsYSBvIG5cdTAwZmFtZXJvIGRlIG91cm8uXG4oMSArIHNxcnQoNSkpLzIiLCJzY3QiOiJ0ZXN0X291dHB1dF9jb250YWlucyhcIjEuNjE4MDM0XCIsIGluY29ycmVjdF9tc2cgPSBcIlRlbSBjZXJ0ZXphIGRlIHF1ZSBpbmRpY291IGEgZXhwcmVzc1x1MDBlM28gY29ycmV0YW1lbnRlP1wiKVxuc3VjY2Vzc19tc2coXCJHcmVhdCFcIikifQ==
&lt;/div&gt;
&lt;/iframe&gt;


&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
  (function () {
    var script = document.createElement(&#34;script&#34;);
    script.type = &#34;text/javascript&#34;;
    script.src  = &#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#34;;
    if (location.protocol !== &#34;file:&#34; &amp;&amp; /^https?:/.test(script.src))
      script.src  = script.src.replace(/^https?:/, &#39;&#39;);
    document.getElementsByTagName(&#34;head&#34;)[0].appendChild(script);
  })();
&lt;/script&gt;

&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Exercícios</title>
      <link>/visualizacao/exercicios/</link>
      <pubDate>Tue, 22 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/visualizacao/exercicios/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;O que tem de errado no código abaixo? Por que os pontos não ficaram azuis?&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy, color = &amp;quot;blue&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/exercicios_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Mapeie uma variável contínua para uma cor, tamanho e forma. Como essas formas estéticas se comportam diferente para variáveis categóricas vs. contínuas?&lt;/li&gt;
&lt;/ol&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Legendas no ggplot2</title>
      <link>/visualizacao/legendas-ggplot2/</link>
      <pubDate>Fri, 18 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/visualizacao/legendas-ggplot2/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;Começando de um simples boxplot feito no &lt;code&gt;ggplot2&lt;/code&gt; vamos fazer diversas alterações nas legendas. O gráfico inicial é construido da seguinte forma:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
# boxplot simples
bp &amp;lt;- ggplot(data=PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
bp&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;removendo-totalmente-a-legenda&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Removendo totalmente a legenda&lt;/h2&gt;
&lt;p&gt;Existem diversas maneiras para remover a legenda de um gráfico no &lt;code&gt;ggplot2&lt;/code&gt;. A forma mais simples é usar &lt;code&gt;guides(fill = FALSE)&lt;/code&gt; com &lt;code&gt;fill&lt;/code&gt; sendo o atributo gráfico do qual você deseja remover a legenda.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# aqui definimos fill = FALSE, porque é o atributo do gráfico que relacionamos 
# a alguma variável.
bp + guides(fill = FALSE)

# também é possível remover a legenda por meio da escala de cores
# aqui também usamos o scale_fill_discrete, porque associamos fill
# a uma variável anteriormente.
bp + scale_fill_discrete(guide = F)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;50%&#34; height=&#34;60%&#34; /&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-3-2.png&#34; width=&#34;50%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# o comando a seguir remove todas as legendas, não importa o atributo que ela
# esteja representando.
bp + theme(legend.position=&amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;alterando-a-ordem-dos-itens&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Alterando a ordem dos itens&lt;/h2&gt;
&lt;p&gt;Para alterar a ordem dos itens na legenda do gráfico no &lt;code&gt;ggplot2&lt;/code&gt;, usamos o comando da escala de cores.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bp + scale_fill_discrete(breaks=c(&amp;quot;trt1&amp;quot;,&amp;quot;ctrl&amp;quot;,&amp;quot;trt2&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bp&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-5-2.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Dependendo de os aspectos gráficos (Ex: cores, formatos, preenchimentos) foram especificados você pode precisar usar alguma das seguintes funções: &lt;code&gt;scale_fill_manual&lt;/code&gt;, &lt;code&gt;scale_colour_hue&lt;/code&gt;, &lt;code&gt;scale_colour_manual&lt;/code&gt;, &lt;code&gt;scale_shape_discrete&lt;/code&gt;, &lt;code&gt;scale_linetype_discrete&lt;/code&gt; , e assim por diante.&lt;/p&gt;
&lt;p&gt;Você pode também querer inverter a ordem dos itens da legenda. Isso pode ser feito de uma das seguintes maneiras.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bp + guides(fill = guide_legend(reverse=TRUE))
bp + scale_fill_discrete(guide = guide_legend(reverse=TRUE))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;50%&#34; height=&#34;60%&#34; /&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-6-2.png&#34; width=&#34;50%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;removendo-os-titulos-da-legenda&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Removendo os títulos da legenda&lt;/h2&gt;
&lt;p&gt;Algumas vezes é necessário remover o título das legendas do gráfico feito no &lt;code&gt;ggplot2&lt;/code&gt;. Veja a seguir algumas maneiras:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Remove o título apenas da legenda do preenchimento (fill)
bp + guides(fill=guide_legend(title=NULL))

# Remove o título de todas as legendas
bp + theme(legend.title=element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;50%&#34; height=&#34;60%&#34; /&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-7-2.png&#34; width=&#34;50%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;modificando-texto-cores-e-rotulos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Modificando texto, cores e rótulos&lt;/h2&gt;
&lt;p&gt;Para modificar os textos e rótulos das legendas existem duas formas. Uma delas é modificar o &lt;code&gt;data.frame&lt;/code&gt; de forma com que os fatores tenham o mesmo nome que você deseja na legenda. Outra forma é usando as funções de &lt;code&gt;scale&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Veja algumas modificações que podem ser feitas por meio das funções de &lt;code&gt;scale&lt;/code&gt;. Como a variável &lt;code&gt;group&lt;/code&gt; está associada ao atributo &lt;code&gt;fill&lt;/code&gt;, usamos as funções &lt;code&gt;scale_fill_xxx&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# usamos scale_fill_discrete porque não queremos alterar as cores padrão,
# mas queremos que cada fator esteja associado a uma cor de tom diferente.
# mudamos aqui os rótulos e o título da legenda.
bp + scale_fill_discrete(name=&amp;quot;Experimental\nCondition&amp;quot;,
                         breaks=c(&amp;quot;ctrl&amp;quot;, &amp;quot;trt1&amp;quot;, &amp;quot;trt2&amp;quot;),
                         labels=c(&amp;quot;Control&amp;quot;, &amp;quot;Treatment 1&amp;quot;, &amp;quot;Treatment 2&amp;quot;))


# usamos scale_fill_manual porque queremos alterar as cores padrão.
# aqui escolhemos as cores da escala hexadecimal.
bp + scale_fill_manual(values=c(&amp;quot;#999999&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#56B4E9&amp;quot;), 
                       name=&amp;quot;Experimental\nCondition&amp;quot;,
                       breaks=c(&amp;quot;ctrl&amp;quot;, &amp;quot;trt1&amp;quot;, &amp;quot;trt2&amp;quot;),
                       labels=c(&amp;quot;Control&amp;quot;, &amp;quot;Treatment 1&amp;quot;, &amp;quot;Treatment 2&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;50%&#34; height=&#34;60%&#34; /&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;50%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Veja que isso não aletrou o eixo X do gráfico.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;modificando-a-aparencia-da-legenda&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Modificando a aparência da legenda&lt;/h2&gt;
&lt;p&gt;Existem inúmeras modificações que podem ser realizadas na aparência da legenda. Todas elas estão relacionadas à modificação do &lt;code&gt;element_text&lt;/code&gt;. Veja neste &lt;a href=&#34;http://docs.ggplot2.org/0.9.2.1/element_text.html&#34;&gt;link&lt;/a&gt; todos os atributos que podem ser modificados.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Mudando a aparência do título
bp + theme(legend.title = element_text(colour=&amp;quot;blue&amp;quot;, size=16, face=&amp;quot;bold&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Mudando a aparência dos rótulos
bp + theme(legend.text = element_text(colour=&amp;quot;blue&amp;quot;, size = 16, face = &amp;quot;bold&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;modificando-a-posicao-da-legenda&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Modificando a posição da legenda&lt;/h2&gt;
&lt;p&gt;É possível controlar a posição da legenda facilmente escolhendo uma das posições (left/right/top/bottom).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bp + theme(legend.position=&amp;quot;top&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Também é possível controlar a posição da legenda de forma precisa usando o comando. Desta forma ela será posicionada dentro do gráfico com o ponto central sendo o valor do argumento &lt;code&gt;legend.position&lt;/code&gt;. Esses valores são definidos de forma que o ponto (0,0) seja o canto inferior esquerdo e (1,1) seja o canto superior direito.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bp + theme(legend.position=c(.5, .5))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/legendas-ggplot2_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Visualização</title>
      <link>/visualizacao/</link>
      <pubDate>Fri, 11 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/visualizacao/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;Para este tópico vamos utilizar o &lt;code&gt;ggplot2&lt;/code&gt;. O &lt;code&gt;ggplot2&lt;/code&gt; é um pacote do R voltado para a criação de gráficos estatísticos. Ele é baseado na Gramática dos Gráficos (&lt;em&gt;grammar of graphics&lt;/em&gt;, em inglês), criado por Leland Wilkinson, que é uma resposta para a pergunta: o que é um gráfico estatístico? Resumidamente, a gramática diz que um gráfico estatístico é um mapeamento dos dados a partir de atributos estéticos (cores, formas, tamanho) em formas geométricas (pontos, linhas, barras).&lt;/p&gt;
&lt;p&gt;Para mais informações sobre a Gramática dos Gráficos, você pode consultar o livro &lt;a href=&#34;http://www.springer.com/statistics/computational+statistics/book/978-0-387-24544-7&#34;&gt;&lt;em&gt;The Grammar of graphics&lt;/em&gt;&lt;/a&gt;, escrito pelo Leland Wilkinson, ou o livro &lt;a href=&#34;http://ggplot2.org/book/&#34;&gt;ggplot2: elegant graphics for data analysis&lt;/a&gt;, do Hadley Wickham. Um &lt;a href=&#34;http://moderngraphics11.pbworks.com/f/ggplot2-Book09hWickham.pdf&#34;&gt;pdf do livro&lt;/a&gt; também está disponível.&lt;/p&gt;
&lt;p&gt;Para quem quiser se aprofundar mais com o &lt;code&gt;ggplot2&lt;/code&gt;, o &lt;a href=&#34;https://www.datacamp.com/&#34;&gt;DataCamp&lt;/a&gt; possui dois cursos focados em visualização. É possível começar o curso gratuitamente, mas para terminar, tem que pagar.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.datacamp.com/courses/data-visualization-with-ggplot2-1&#34;&gt;Data Visualization with ggplot2 (Part 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.datacamp.com/courses/data-visualization-with-ggplot2-2&#34;&gt;Data Visualization with ggplot2 (Part 2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Antes de começar, instale o pacote digitando &lt;code&gt;install.packages(&amp;quot;ggplot2&amp;quot;)&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;banco-de-dados&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Banco de dados&lt;/h2&gt;
&lt;p&gt;A seguir, vamos discutir os aspectos básicos para a construção de gráficos com o pacote &lt;code&gt;ggplot2&lt;/code&gt;. Para isso, utilizaremos o banco de dados contido no objeto &lt;code&gt;mtcars&lt;/code&gt;. Para visualizar as primeiras linhas deste banco, utilize o comando:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(mtcars)
##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O &lt;code&gt;mtcars&lt;/code&gt; é um banco de dados de 1974 extraído da revista &lt;em&gt;Motor Trend US&lt;/em&gt; que compreende consumo de combustível e outros 10 aspectos de performance e engenharia de 32 automóveis.&lt;/p&gt;
&lt;p&gt;Entre as variáveis deste banco de dados estão:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mpg&lt;/code&gt;: consumo de combustível (milhas por galão)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disp&lt;/code&gt;: cilindrada, que é o &lt;a href=&#34;https://pt.wikipedia.org/wiki/Cilindrada&#34;&gt;volume de deslocamento do motor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para saber mais sobre o &lt;code&gt;mtcarts&lt;/code&gt;, digite &lt;code&gt;help(mtcars)&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;as-camadas-de-um-grafico&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;As camadas de um gráfico&lt;/h2&gt;
&lt;p&gt;Antes de mais nada, vamos carregar o &lt;code&gt;ggplot2&lt;/code&gt; usando:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No &lt;code&gt;ggplot2&lt;/code&gt;, os gráficos são construídos camada por camada (ou, &lt;em&gt;layers&lt;/em&gt;, em inglês), sendo que a primeira delas é dada pela função &lt;code&gt;ggplot&lt;/code&gt; (não tem o “2”). Cada camada representa um tipo de mapeamento ou personalização do gráfico. O código abaixo é um exemplo de um gráfico bem simples, construído a partir das duas principais camadas.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mtcars) + 
  geom_point(mapping = aes(x = disp, y = mpg))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/grafico1-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Observe que o primeiro argumento da função &lt;code&gt;ggplot&lt;/code&gt; é um data frame. A função &lt;code&gt;aes()&lt;/code&gt; descreve como as variáveis são mapeadas em aspectos visuais de formas geométricas definidas pelos &lt;em&gt;geoms&lt;/em&gt;. Aqui, essas formas geométricas são pontos, selecionados pela função &lt;code&gt;geom_point()&lt;/code&gt;, gerando, assim, um gráfico de dispersão. A combinação dessas duas camadas define o tipo de gráfico que você deseja construir.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;aesthetics&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Aesthetics&lt;/h2&gt;
&lt;p&gt;A primeira camada de um gráfico deve indicar a relação entre os dados e cada aspecto visual do gráfico, como qual variável será representada no eixo x, qual será representada no eixo y, a cor e o tamanho dos componentes geométricos etc. Os aspectos que podem ou devem ser mapeados depende do tipo de gráfico que você deseja fazer.&lt;/p&gt;
&lt;p&gt;No exemplo acima, atribuímos aspectos de posição: ao eixo y mapeamos a variável &lt;code&gt;mpg&lt;/code&gt; (milhas por galão) e ao eixo x a variável &lt;code&gt;disp&lt;/code&gt; (cilindradas). Outro aspecto que pode ser mapeado nesse gráfico é a cor dos pontos&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mtcars) + 
  geom_point(mapping = aes(x = disp, y = mpg, colour = as.factor(am)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/mapear_am-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Agora, a variável &lt;code&gt;am&lt;/code&gt; (tipo de transmissão) foi mapeada à cor dos pontos, sendo que pontos vermelhos correspondem à transmissão automática (valor 0) e pontos azuis à transmissão manual (valor 1). Observe que inserimos a variável &lt;code&gt;am&lt;/code&gt; como um fator, pois temos interesse apenas nos valores “0” e “1”. No entanto, tambem podemos mapear uma variável contínua à cor dos pontos:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) + 
  geom_point(mapping = aes(x = disp, y = mpg, colour = cyl))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/mapear_cor-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Aqui, o número de cilindros, &lt;code&gt;cyl&lt;/code&gt;, é representado pela tonalidade da cor azul.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nota&lt;/strong&gt;: por &lt;em&gt;default&lt;/em&gt;, a legenda é insirida no gráfico automaticamente.&lt;/p&gt;
&lt;p&gt;Também podemos mapear o tamanho dos pontos à uma variável de interesse:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) +
  geom_point(mapping = aes(x = disp, y = mpg, colour = cyl, size = wt))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/mapear_tamanaho-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exercício&lt;/strong&gt;: pesquisar mais aspectos que podem ser alterados no gráfico de dispersão. &lt;a href=&#34;http://ggplot2.tidyverse.org/articles/ggplot2-specs.html&#34;&gt;Essa&lt;/a&gt; é uma boa referência.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;geoms&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Geoms&lt;/h2&gt;
&lt;p&gt;Os &lt;em&gt;geoms&lt;/em&gt; definem qual forma geométrica será utilizada para a visualização dos dados no gráfico. Como já vimos, a função &lt;code&gt;geom_point()&lt;/code&gt; gera gráficos de dispersão transformando pares (x,y) em pontos. Veja a seguir outros &lt;em&gt;geoms&lt;/em&gt; bastante utilizados:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;geom_line&lt;/code&gt;: para linhas definidas por pares (x,y)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_abline&lt;/code&gt;: para retas definidas por um intercepto e uma inclinação&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_hline&lt;/code&gt;: para retas horizontais&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_boxplot&lt;/code&gt;: para boxplots&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_histogram&lt;/code&gt;: para histogramas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_density&lt;/code&gt;: para densidades&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_area&lt;/code&gt;: para áreas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_bar&lt;/code&gt;: para barras&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Veja a seguir como é fácil gerar diversos gráficos diferentes utilizando a mesma estrutura do gráfico de dispersão acima:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) + 
  geom_boxplot(aes(x = as.factor(cyl), y = mpg))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; que para fazer um boxplot para cada grupo, precisamos passar para o aspecto x do gráfico uma variável do tipo &lt;code&gt;factor&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) + 
  geom_histogram(aes(x = mpg))
## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) + 
  geom_bar(aes(x = as.factor(cyl)))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;
Um padrão para os gráficos
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;Você deve ter percebido que para fazer um gráfico usando &lt;code&gt;ggplot2&lt;/code&gt; e a gramática dos gráficos, existe um padrão:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ggplot(data = &amp;lt;DATA&amp;gt;) + 
  &amp;lt;GEOM_FUNCTION&amp;gt;(mapping = aes(&amp;lt;MAPPINGS&amp;gt;))&lt;/code&gt;&lt;/pre&gt;
Para fazer um gráfico, basta substituir o que está entre &lt;code&gt;&amp;lt;&lt;/code&gt; com um banco de dados, uma função geométrica e uma coleção de &lt;em&gt;mapas estéticos&lt;/em&gt;. Isso será muito útil quando você for fazer o seu próprio gráfico.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;exercicios&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Exercícios&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Rode &lt;code&gt;ggplot(data = mtcars)&lt;/code&gt;. O que você vê?&lt;/li&gt;
&lt;li&gt;Quantas linhas existem no &lt;code&gt;mtcars&lt;/code&gt;. Quantas colunas? &lt;strong&gt;Dica&lt;/strong&gt;: use a função &lt;code&gt;nrows&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;O que a variável &lt;code&gt;qsec&lt;/code&gt; descreve. Leia o help do &lt;code&gt;mtcars&lt;/code&gt; para encontrar.&lt;/li&gt;
&lt;li&gt;Faça um gráfico de dispersão de &lt;code&gt;mpg&lt;/code&gt; por &lt;code&gt;qsec&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;O que acontece se você fizer um gráfico de dispersão de &lt;code&gt;vs&lt;/code&gt; por &lt;code&gt;mpg&lt;/code&gt;? Porque o gráfico não é útil?&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;combinando-graficos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Combinando gráficos&lt;/h2&gt;
&lt;p&gt;Considere os 2 gráficos a seguir.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# esquerda
ggplot(mtcars) + 
  geom_point(aes(y = mpg, x = disp))
# direita
ggplot(mtcars) + 
  geom_smooth(aes(y = mpg, x = disp))
## `geom_smooth()` using method = &amp;#39;loess&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/duplochunk-1.png&#34; width=&#34;50%&#34; height=&#34;60%&#34; /&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/duplochunk-2.png&#34; width=&#34;50%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Os gráficos são similares e completaam-se. O da esquerda, mostra como os pontos estão distribuídos. Ele mostra uma tendência de aumento do consumo de combustível de acordo com as cilindradas. Já o gráfico da direita, resume essa relação. Simplificando-a para uma linha de tendência com alguma margem de confiança.&lt;/p&gt;
&lt;p&gt;Esses dois gráficos se completam, e ficam bons juntos. Com o &lt;code&gt;ggplot2&lt;/code&gt; é muito fácil sobrepor os dois gráficos, pois ele é pensado para que cada gráfico seja feito com uma combinação de camadas. Veja o código abaixo.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars) + 
  geom_point(aes(y = mpg, x = disp)) +
  geom_smooth(aes(y = mpg, x = disp))
## `geom_smooth()` using method = &amp;#39;loess&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Desta forma, sobrepusemos os pontos e a linha de suavização. No entanto, duplicamos alguns trechos no nosso código, o que geralmente não é bom. Imagine se você precisar mudar a variável do eixo &lt;code&gt;y&lt;/code&gt;, você precisará trocar o nome da variável em mais de um lugar do código. Para resolver isso, você pode definir o &lt;em&gt;mapping&lt;/em&gt; apenas uma vez dentro da declaração do gráfico, conforme o código a seguir.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point() +
  geom_smooth()
## `geom_smooth()` using method = &amp;#39;loess&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Veja que isso gera o mesmo gráfico!&lt;/p&gt;
&lt;p&gt;Veja que mesmo com dois &lt;code&gt;geom&lt;/code&gt;’s, o &lt;code&gt;ggplot&lt;/code&gt; segue a mesma regra para mapear as variáveis para as &lt;code&gt;aesthetics&lt;/code&gt;. Por exemplo, se você mapear uma variável para a cor, você obterá o seguinte gráfico.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(y = mpg, x = disp, colour = as.factor(cyl))) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;O &lt;code&gt;ggplot2&lt;/code&gt; agora desenhou uma reta para cada um dos grupos de pontos e coloriu cada grupo de pontos de uma cor diferente. Em alguns casos, você pode querer mapear a cor em apenas uma das camadas do gráfico. Isso pode ser feito da seguinte forma:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point(aes(colour = as.factor(cyl))) +
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Note que agora, cada grupo de pontos tem uma cor mas a reta é única, para todos os pontos.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;alterando-os-padroes-do-grafico&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Alterando os padrões do gráfico&lt;/h2&gt;
&lt;p&gt;Até agora, sempre &lt;em&gt;mapeamos&lt;/em&gt; uma forma estética à uma variável. Muitas vezes queremos apenas modificar esta forma estética sem mapeá-la a outra variável. Por exemplo, no gráfico a seguir, modificamos a cor de todos os pontos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point(colour = &amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A principal diferença aqui é que especificamos o argumento &lt;code&gt;colour&lt;/code&gt; fora da função &lt;code&gt;aes&lt;/code&gt; como estávamos fazendo antes. Dessa forma podemos controlar todos os parâmetros de cada forma geométrica.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point(colour = &amp;quot;red&amp;quot;, size = 2, shape = 3, alpha = 0.5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;facets&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Facets&lt;/h2&gt;
&lt;p&gt;Uma funcionalidade muito útil do &lt;code&gt;ggplot2&lt;/code&gt; é a possibilidade de usar &lt;code&gt;facets&lt;/code&gt;. Isso auxilia na visualização de diferentes subconjuntos dos dados em gráficos separados, permitindo a visualização de comportamentos diferentes dependendo do grupo.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) + 
  facet_wrap(~am)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/visualizacao/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;No gráfico acima, rapidamente conseguimos visualizar que se o carro não é automático o consumo de combustível é muito menor do que quando o carro é automático. Também conseguimos ver que a inclinação das retas é bem diferente dependendo do carro ser automático/manual.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;outros-artigos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Outros artigos&lt;/h2&gt;
&lt;p&gt;Disponibilizamos alguns outros artigos que instruem outras tarefas comuns com o &lt;code&gt;ggplot2&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./visualizacao/legendas-ggplot2/&#34;&gt;Modificando as legendas no &lt;code&gt;ggplot2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Curso-R</title>
      <link>/</link>
      <pubDate>Wed, 09 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;O curso-r ensinará como usar o R para auxiliar o aluno na execução de tarefas corriqueiras de forma eficiente e concisa. O aluno aprenderá a:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Carregar&lt;/strong&gt;: Carregar o banco de dados para dentro do R&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Arrumar&lt;/strong&gt;: Deixar os dados na melhor estrutura para a análise&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Transformar&lt;/strong&gt;: Agregar, criar novas variáveis, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visualizar&lt;/strong&gt;: Criar gráficos e visualizações&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Modelar&lt;/strong&gt;: Ajustar modelos que ajudam na interpretação dos dados&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O curso será baseado no &lt;a href=&#34;http://r4ds.had.co.nz/&#34;&gt;&lt;em&gt;R for Data Science&lt;/em&gt;&lt;/a&gt; que por sua vez é baseado no &lt;a href=&#34;http://tidyverse.org/&#34;&gt;&lt;code&gt;tidyverse&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;universo arrumado&lt;/em&gt;, um conjunto de pacotes que dividem uma mesma filosofia e foram feitos para serem utilizados conjuntamente.&lt;/p&gt;
&lt;div id=&#34;publico-alvo&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Público Alvo&lt;/h2&gt;
&lt;p&gt;O curso-r é destinado a:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Estudantes de graduação em estatística que desejam ganhar tempo nos trabalhos da faculdade e entrar no mercado de trabalho com bons diferenciais.&lt;/li&gt;
&lt;li&gt;Profissionais do mercado de trabalho que desejam inserir o R mo fluxo de atividades do setor/empresa.&lt;/li&gt;
&lt;li&gt;Acadêmicos com interesse em tornar suas análises e códigos mais legíveis, reprodutíveis, eficientes e organizados.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;softwares&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Softwares&lt;/h2&gt;
&lt;p&gt;O curso será realizado em um laboratório, onde os softwares já estarão instalados mas, para fazer os exercícios fora da aula você precisará instalar os seguintes softwares/pacotes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R: Instale pelo site do &lt;a href=&#34;https://cloud.r-project.org/&#34;&gt;CRAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RStudio: Faça o download &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download3/&#34;&gt;aqui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tidyverse&lt;/code&gt;: No console do R digite: &lt;code&gt;install.packages(&amp;quot;tidyverse&amp;quot;)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;pre-requisitos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Pré-requisitos&lt;/h2&gt;
&lt;p&gt;Para melhor aproveitamento do curso é importante o aluno ter alguns conhecimentos sobre &lt;strong&gt;Lógica de programação&lt;/strong&gt;. Não se preocupe, se você já fez qualquer curso de programação na vida, já será o suficiente.&lt;/p&gt;
&lt;p&gt;Se o aluno não for familiarizado com R, recomendamos abrir o RStudio e tentar rodar e entender os comandos &lt;a href=&#34;https://curso-r.github.io/verao2017/r-como-calculadora/&#34;&gt;desta página&lt;/a&gt;. Tente fazer os &lt;a href=&#34;https://curso-r.github.io/verao2017/r-como-calculadora/#exercicios&#34;&gt;exercícios&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Durante o curso iremos usar bastante o &lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt;, portanto criar uma conta será fundamental.&lt;/p&gt;
&lt;p&gt;Tente se familiarizar com &lt;a href=&#34;http://rmarkdown.rstudio.com/lesson-1.html&#34;&gt;RMarkdown&lt;/a&gt;. O curso utilizará este formato de arquivos extensivamente.&lt;/p&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Aula 02</title>
      <link>/02-arrumacao/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/02-arrumacao/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;Isso é uma aula.&lt;/p&gt;
&lt;p&gt;Isso é uma fórmula&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
A\theta = X\beta
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Isso é um código avançado&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;1 + 3&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 4&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;item&lt;/li&gt;
&lt;li&gt;iza&lt;/li&gt;
&lt;li&gt;ção&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Figura &lt;a href=&#34;#fig:figura&#34;&gt;1&lt;/a&gt;, funciona coisas de bookdown?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(1:10)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:figura&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;#####../content/02-arrumacao/index_files/figure-html/figura-1.png&#34; alt=&#34;isso é o plot mais fácil de fazer que pensei.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: isso é o plot mais fácil de fazer que pensei.
&lt;/p&gt;
&lt;/div&gt;


&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
  (function () {
    var script = document.createElement(&#34;script&#34;);
    script.type = &#34;text/javascript&#34;;
    script.src  = &#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#34;;
    if (location.protocol !== &#34;file:&#34; &amp;&amp; /^https?:/.test(script.src))
      script.src  = script.src.replace(/^https?:/, &#39;&#39;);
    document.getElementsByTagName(&#34;head&#34;)[0].appendChild(script);
  })();
&lt;/script&gt;

&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>R como calculadora</title>
      <link>/r-como-calculadora/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/r-como-calculadora/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;p&gt;A linguagem &lt;code&gt;R&lt;/code&gt; é um tanto quanto intuitiva, muita coisa sai do jeito certo no chute! Para ver um exemplo disso, é interessante começar fazendo do R uma grande calculadora. Tente jogar no console &lt;code&gt;2*2 - (4 + 4)/2&lt;/code&gt;. Pronto. Com essa simples expressão você já é capaz de imaginar (e certeiramente) como pedir ao R para fazer qualquer tipo de operação aritmética. Lição aprendida!&lt;/p&gt;
&lt;p&gt;Além do mais, as operações e suas precedências são mantidas como na matemática, ou seja, divisão e multiplicação são calculadas antes da adição e subtração. E os parênteses nunca são demais!&lt;/p&gt;
&lt;div id=&#34;rstudio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;RStudio&lt;/h2&gt;
&lt;p&gt;Talvez você tenha imaginado qual seria o resultado da operação, mas ainda não tenha conseguido calcular usando o R, porque você não sabe onde digitar aquilo, por isso vamos apresentar o RStudio.&lt;/p&gt;
&lt;p&gt;O RStudio é um (o melhor) IDE (&lt;em&gt;integrated development environment&lt;/em&gt;) para o R. E você pode fazer o download &lt;a href=&#34;https://www.rstudio.com/products/rstudio/download3/&#34;&gt;aqui&lt;/a&gt;. Estamos assumindo que você já instalou o próprio R. Se não instalou, &lt;a href=&#34;https://cloud.r-project.org/&#34;&gt;clique aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Assim que abrir o RStudio você verá a seguinte tela.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;figures/rstudio-editor.png&#34; alt=&#34;&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;Nela estão dispostos &lt;strong&gt;editor&lt;/strong&gt;, &lt;strong&gt;console&lt;/strong&gt;, &lt;strong&gt;environment&lt;/strong&gt; e &lt;strong&gt;output&lt;/strong&gt;. Normalmente eles vêm nesta ordem, depois você pode organizá-los da forma que preferir. Preste atenção a todos esses campos durante este tutorial.&lt;/p&gt;
&lt;p&gt;Agora que você já conhece o RStudio, digite a expressão &lt;code&gt;2*2 - (4 + 4)/2&lt;/code&gt; no &lt;strong&gt;console&lt;/strong&gt; e tecle &lt;code&gt;Enter&lt;/code&gt;. Uma outra forma de chamar uma expressão é escrever o código no &lt;strong&gt;editor&lt;/strong&gt; e teclar &lt;code&gt;Ctrl + Enter&lt;/code&gt;. Assim o comando é enviado para o &lt;strong&gt;console&lt;/strong&gt; onde é diretamente executado.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;usando-o-console&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Usando o console&lt;/h2&gt;
&lt;p&gt;Pelo console é possível executar qualquer comando do R.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;1:30
##  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
## [24] 24 25 26 27 28 29 30&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esse comando é uma forma simplificada de criar um vetor de inteiros de 1 a 30. Você pode ignorar esses números que aparecem entre parênteses, na verdade eles só indicam o índice do primeiro elemento impresso nessa linha.&lt;/p&gt;
&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;
Quando compilamos?
&lt;/p&gt;
&lt;p&gt;
Quem vem de linguagens como o C ou Java, espera que seja necessário compilar o código em texto para o código de máquinas (geralmente um código binário). No R, isso não é necessário. O R é uma linguagem de programação dinâmica que interpreta o seu código enquanto você o executa.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Se você digitar um comando incompleto, como &lt;code&gt;5 +&lt;/code&gt; e apertar &lt;code&gt;Enter&lt;/code&gt;, o R irá mostrar um &lt;code&gt;+&lt;/code&gt;, o que não tem nada a ver com somar alguma coisa, e sim significa que o R está esperando que você complete o seu comando. Termine o seu comando ou aperte &lt;code&gt;Esc&lt;/code&gt; para recomeçar.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; 5 -
+ 
+ 5
[1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se você digitar um comando que o R não reconhecer, ele irá retornar uma mensagem de erro. Não entre em pânico. Ele só está avisando que não conseguiu interpretar o comando. Depois você já pode digitar mais um comando.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; 5 % 5
Error: unexpected input in &amp;quot;5 % 5&amp;quot;
&amp;gt; 5 - 5
[1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;objetos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Objetos&lt;/h2&gt;
&lt;p&gt;O R permite que você salve dados guardando estes dentro de um objeto. Um objeto nada mais é do que um nome, que pode ser utilizado para chamar dados armazenados. Por exemplo, você pode salvar dados em &lt;code&gt;a&lt;/code&gt;. Sempre que o R encontrar o nome &lt;code&gt;a&lt;/code&gt; ele o substituirá pelos dados armazenados em &lt;code&gt;a&lt;/code&gt;. Por exemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- 1
a + 1
## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No Rstudio, quando um objeto é criado, ele começa a aparecer no painel &lt;strong&gt;environment&lt;/strong&gt;. Essa é uma ótima forma de acompanhar todos os objetos que estão disponíveis no seu &lt;em&gt;environment&lt;/em&gt;. Outro ponto que é importante lembrar aqui é que o R entende letras maiúsculas e minúsculas, isto é &lt;code&gt;a&lt;/code&gt; é considerado um objeto diferente de &lt;code&gt;A&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; a
[1] 1
&amp;gt; A
Error: object &amp;#39;A&amp;#39; not found&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;
&amp;lt;- ou = ?
&lt;/p&gt;
&lt;p&gt;
Essa pergunta é comum, e a resposta padrão é: melhor usar &amp;lt;-. No entanto, na maioria dos casos os dois são equivalentes. Portanto, use qual você achar melhor e seja consistente. Uma boa referência é este &lt;a href=&#34;http://pt.stackoverflow.com/a/160092/6036&#34;&gt;link&lt;/a&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;O R substitui os valores de um objeto sem pedir permissão. Então, se você não deseja sobreescrever o valor de um objeto, não use o mesmo nome.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- 1
a
## [1] 1
a &amp;lt;- 2
a
## [1] 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Agora, vamos definir um novo objeto no R, chamado &lt;code&gt;vetor&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vetor &amp;lt;- 1:10&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;De forma bastante intuitiva, você pode fazer operações com vetores.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vetor - 1
##  [1] 0 1 2 3 4 5 6 7 8 9
vetor / 2
##  [1] 0.5 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0
vetor * 10
##  [1]  10  20  30  40  50  60  70  80  90 100&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quando você faz &lt;code&gt;vetor - 1&lt;/code&gt;, o R subtrai &lt;code&gt;1&lt;/code&gt; de cada um dos elementos do vetor. O mesmo acontece quando você faz qualquer operação aritmética com vetores no R.&lt;/p&gt;
&lt;p&gt;Você também pode fazer operações que envolvem mais de um vetor. Exemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vetor * vetor
##  [1]   1   4   9  16  25  36  49  64  81 100&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Neste caso, o R irá alinhar os dois vetores e multiplicar elemento por elemento. Isso pode ficar um pouco confuso quando os dois vetores não possuem o mesmo tamanho:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vetor2 &amp;lt;- 1:2
vetor2
## [1] 1 2
vetor * vetor2
##  [1]  1  4  3  8  5 12  7 16  9 20&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Agora o R alinhou os dois vetores, e como eles não possuiam o mesmo tamanho, ele foi repetindo o menor vetor até completar o vetor maior. Isso retornaria um warning se o tamanho do maior não fosse múltiplo do tamanho do vetor menor.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; vetor * vetor3
 [1]  1  4  9  4 10 18  7 16 27 10
Warning message:
In vetor * vetor3 :
  longer object length is not a multiple of shorter object length&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esse comportamento é chamado de &lt;strong&gt;reciclagem&lt;/strong&gt;. Isso é útil para fazer operações com os vetores elementos por elementos (vetorizadamente), mas as vezes pode ser confuso. Com o tempo você aprenderá a se aproveitar desse comportamento.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;funcoes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Funções&lt;/h2&gt;
&lt;p&gt;O R vem com muitas funções implementadas com as quais você pode fazer muitas tarefas complicadas, como gerar números aleatórios. Geralmente o nome das funções é bem intuitivo, por exemplo &lt;code&gt;mean&lt;/code&gt; é a função que calcula a média, &lt;code&gt;round&lt;/code&gt; é a função que arredonda um número, etc.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pi
## [1] 3.141593
round(pi)
## [1] 3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para entender melhor o funcionamento das funções no R considere o seguinte exemplo.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;die &amp;lt;- 1:6
round(mean(die))
## [1] 4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;De forma natural, o R executa as funções uma a uma começando por dentro dos parênteses. Neste caso, ele primeiro substituirá &lt;code&gt;die&lt;/code&gt; pelo seu valor, em seguida irá calcular a média de &lt;code&gt;die&lt;/code&gt; usando a função &lt;code&gt;mean&lt;/code&gt;. Em seguida ele usa a função &lt;code&gt;round&lt;/code&gt; para arredondar a média de &lt;code&gt;die&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A ilustração abaixo ajuda a entender o que acontece quando você executa &lt;code&gt;round(mean(die))&lt;/code&gt; no R.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;figures/round.png&#34; alt=&#34;&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;Passamos dados para as funções por meio de argumentos. No R, esses argumentos estão documentados na página de ajuda de cada uma das funções, que pode ser acessada digitando &lt;code&gt;help(nome_da_funcao)&lt;/code&gt; ou &lt;code&gt;?nome_da_funcao&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;criando-suas-proprias-funcoes&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Criando suas próprias funções&lt;/h3&gt;
&lt;p&gt;Apesar de já existirem uma infinidade de funções disponíveis no R, muitas vezes você deseja criar a sua própria função. Por exemplo, para organizar uma sequência de funções que são executadas da mesma forma em diversos lugares do seu código.&lt;/p&gt;
&lt;p&gt;Funções no R também são objetos, assim como vetores. A diferença é a forma de criá-los e de executá-los. Uma nova função pode ser criada da seguinte forma:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_function &amp;lt;- function(x){
  x/2
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pronto. Criamos uma função que divido o argumento &lt;code&gt;x&lt;/code&gt; por 2. Você pode ver o código de qualquer função do R digitando o nome dela no console (sem parênteses no final).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;my_function
## function(x){
##   x/2
## }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;controles-de-fluxo&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Controles de Fluxo&lt;/h2&gt;
&lt;p&gt;O R possui estruturas de controle de fluxo que são importantes na hora de programar as suas próprias funções e scripts. O seguinte trecho de código só será executado se o objeto &lt;code&gt;x&lt;/code&gt; for igual a 1.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- 2
if(x == 1){
  print(&amp;quot;oi&amp;quot;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- 1
if(x == 1){
  print(&amp;quot;oi&amp;quot;)
}
## [1] &amp;quot;oi&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A estrutura do &lt;code&gt;if&lt;/code&gt; é bem simples, mas é importante para introduzir a noção de vetores lógicos no R. Assim como nas funções, o R executa o que está dentro dos parênteses no &lt;code&gt;if&lt;/code&gt; para depois decidir se executa a expressão dentro de chaves.&lt;/p&gt;
&lt;p&gt;No caso dos exemplos acima, veja que o R executou &lt;code&gt;x == 1&lt;/code&gt; que retorna &lt;code&gt;TRUE&lt;/code&gt;, um tipo especial de dados no R chamado &lt;strong&gt;logical&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x == 1
## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como o resultado dessa operação foi &lt;code&gt;TRUE&lt;/code&gt;, o R executou o que estava entre chaves. Isso nos ajuda a pensar em como funcionam as operações lógicas no R, elas sempre retornam &lt;code&gt;TRUE&lt;/code&gt; ou &lt;code&gt;FALSE&lt;/code&gt; como resultado. O resultado de operações lógicas também pode ser salvo dentro de objetos do R e em seguiida ser reutilizado em outras operações. Por exemplo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;a &amp;lt;- x == 1
b &amp;lt;- x == 2
c &amp;lt;- a &amp;amp; (!b)
if(c){
  print(&amp;quot;oi&amp;quot;)
}
## [1] &amp;quot;oi&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Isso pode ser bastante útil e ajuda a entender bem como o R funciona.&lt;/p&gt;
&lt;p&gt;Uma outra importante estrutura de controle de fluxo é o &lt;code&gt;for&lt;/code&gt;. No Rm, um laço &lt;code&gt;for&lt;/code&gt; é escrito da seguinte forma.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for(i in 1:5){
  print(i)
}
## [1] 1
## [1] 2
## [1] 3
## [1] 4
## [1] 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Veja como é possível utilizar o obejto &lt;code&gt;i&lt;/code&gt; dentro do laço do &lt;code&gt;for&lt;/code&gt;. Para fazer operações mais úteis usando &lt;code&gt;for&lt;/code&gt;, é necessário entender um pouco sobre &lt;em&gt;subsetting&lt;/em&gt; no R. Por enquanto vamos apenas usar que dado um vetor &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;x[i]&lt;/code&gt; retorna o &lt;em&gt;i-ésimo&lt;/em&gt; elemento do vetor &lt;code&gt;x&lt;/code&gt;. Note que os índices começam do 1, ao contrário de muitas outras linguagens em que os índices começam do 0.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;vetor &amp;lt;- 30:40
indices &amp;lt;- 1:length(vetor)
for(i in indices){
  print(vetor[i]/2)
}
## [1] 15
## [1] 15.5
## [1] 16
## [1] 16.5
## [1] 17
## [1] 17.5
## [1] 18
## [1] 18.5
## [1] 19
## [1] 19.5
## [1] 20&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No trecho de código acima, preste atenção no resultado individual de cada uma das operações para entender como o R funciona. Veja o que é o vetor &lt;code&gt;indices&lt;/code&gt;, tente rodar &lt;code&gt;vetor[1]&lt;/code&gt; para ver quais são esses resultados intermediários.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;exercicios&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Exercícios&lt;/h2&gt;
&lt;p&gt;Pratique! Será que você consegue resolver os exercícios abaixo?&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Calcule o número de ouro no R.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ \frac{1 + \sqrt{5}}{2} \]&lt;/span&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;O que dá divisão de 1 por 0 no R? E -1 por 0?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Quais as diferenças entre &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;NA&lt;/code&gt; e &lt;code&gt;Inf&lt;/code&gt;?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tente mentalmente calcular o que dá a conta &lt;code&gt;5 + 3 * 10 %/% 3 == 15&lt;/code&gt; no R, sem rodar.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Adicionando apenas parênteses, faça a expressão acima retornar o resultado contrário.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;O que acontece se você rodar:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- 4
if(x = 4) {
  &amp;#39;isso aqui apareceu&amp;#39;
}
x&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Como você faria para que o código da pergunta anterior fizesse com que &lt;code&gt;&#39;isso aqui apareceu&#39;&lt;/code&gt; fosse impresso no console mas nenhum erro aparecesse?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Difícil&lt;/strong&gt;: Usando &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt; e &lt;code&gt;else&lt;/code&gt; escreva as seguintes frases no console:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; 1 elefante(s) incomoda(m) muita gente
&amp;gt; 2 elefante(s) incomoda(m) incomoda(m) muito mais
&amp;gt; 3 elefante(s) incomoda(m) muita gente
&amp;gt; 4 elefante(s) incomoda(m) incomoda(m) incomoda(m) incomoda(m) muito mais&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Dica&lt;/em&gt;: Leia o help da função &lt;code&gt;paste&lt;/code&gt; e preste atenção no argumento &lt;code&gt;collapse&lt;/code&gt;.&lt;/p&gt;
&lt;ol start=&#34;9&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Crie um vetor com o nome &lt;code&gt;x&lt;/code&gt; que contenha os números &lt;code&gt;1, 20, 40, 50, 60&lt;/code&gt; no R.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Crie um vetor com o nome &lt;code&gt;x&lt;/code&gt; de 100 números aleatórios entre 0 e 1.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Calcule a média do vetor criado na questão anterior.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Crie um vetor com 100 elementos. 99 deles são números aleatórios entre 0 e 1 e o último elemento tem o valor &lt;code&gt;NA&lt;/code&gt;. Calcule também a média deste vetor.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Dica&lt;/em&gt;: Olhe atentamente os argumentos da função &lt;code&gt;mean&lt;/code&gt;.&lt;/p&gt;
&lt;ol start=&#34;13&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Crie uma função que calcula a média de um vetor. Use &lt;code&gt;for&lt;/code&gt; ou &lt;code&gt;while&lt;/code&gt; nesta função.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Crie uma função que simule um dado, ou seja, gera aleatóriamente um número inteiro entre 1 e 6.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Crie uma função que simula o lançamento de &lt;code&gt;n&lt;/code&gt; dados, e devolve a soma de seus resultados.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Difícil&lt;/strong&gt; Faça um histograma dos resultados da soma de 3 dados. Isto é, crie um vetor com 1000 resultados que aconteceram após somar 3 dados. Em seguida faça o histograma.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Esses exercícios possuem resposta &lt;a href=&#34;https://curso-r.github.io/verao2017/r-como-calculadora/respostas&#34;&gt;aqui&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;


&lt;!-- dynamically load mathjax for compatibility with self-contained --&gt;
&lt;script&gt;
  (function () {
    var script = document.createElement(&#34;script&#34;);
    script.type = &#34;text/javascript&#34;;
    script.src  = &#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#34;;
    if (location.protocol !== &#34;file:&#34; &amp;&amp; /^https?:/.test(script.src))
      script.src  = script.src.replace(/^https?:/, &#39;&#39;);
    document.getElementsByTagName(&#34;head&#34;)[0].appendChild(script);
  })();
&lt;/script&gt;

&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Respostas: R como calculadora</title>
      <link>/r-como-calculadora/respostas/</link>
      <pubDate>Tue, 08 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/r-como-calculadora/respostas/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(1 + sqrt(5))/2
## [1] 1.618034&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;1/0
## [1] Inf
-1/0
## [1] -Inf&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# NaN é o resultado de uma operação matemática inválida. Significa Not A Number
0/0
## [1] NaN
# NULL é o vazio do R. É como se o objeto não existisse
NULL
## NULL
a = NULL
is.null(integer(length = 0)) # veja que um vetor, mesmo sem elementos não é NULL
## [1] FALSE
# NA é uma constante lógica do R. Siginifica Not Availlable. NA pode ser 
# convertido para quase todos os tipos de vetores do R. É usado principalmente para
# indicar valores faltantes.
NA
## [1] NA
# Inf é significa infinito. É o resultado de operações matemáticas cujo limite é infinito.
1/0
## [1] Inf
1/Inf
## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;5 + (3 * 10) %/% 3 == 15
## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;&amp;gt; x &amp;lt;- 4
&amp;gt; if(x = 4) {
Erro: &amp;#39;=&amp;#39; inesperado in &amp;quot;if(x =&amp;quot;
&amp;gt;   &amp;#39;isso aqui apareceu&amp;#39;
[1] &amp;quot;isso aqui apareceu&amp;quot;
&amp;gt; }
Erro: &amp;#39;}&amp;#39; inesperado in &amp;quot;}&amp;quot;
&amp;gt; x
[1] 4&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- 4
if(x == 4) {
  &amp;#39;isso aqui apareceu&amp;#39;
}
## [1] &amp;quot;isso aqui apareceu&amp;quot;
x
## [1] 4&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;8&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (i in 1:4){
  if(i %% 2 == 0){
    print(paste(i, &amp;quot;elefante(s)&amp;quot;, paste(rep(&amp;quot;incomoda(m)&amp;quot;, times = i), collapse = &amp;quot; &amp;quot;), &amp;quot;muito mais&amp;quot;))
  } else {
   print(paste(i, &amp;quot;elefante(s) incomoda(m) muita gente&amp;quot;)) 
  }
}
## [1] &amp;quot;1 elefante(s) incomoda(m) muita gente&amp;quot;
## [1] &amp;quot;2 elefante(s) incomoda(m) incomoda(m) muito mais&amp;quot;
## [1] &amp;quot;3 elefante(s) incomoda(m) muita gente&amp;quot;
## [1] &amp;quot;4 elefante(s) incomoda(m) incomoda(m) incomoda(m) incomoda(m) muito mais&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;9&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- c(1, 20, 40, 50, 60)&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;10&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- runif(100)&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;11&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mean(x)
## [1] 0.4500539&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;12&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;x &amp;lt;- c(runif(99), NA)
mean(x, na.rm = T)
## [1] 0.4840031&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;13&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;media &amp;lt;- function(x){
  i &amp;lt;- 1
  tamanho &amp;lt;- length(x)
  soma &amp;lt;- 0
  for(i in 1:tamanho){
    soma &amp;lt;- soma + x[i]
  }
  return(soma/tamanho)
}&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;14&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dado &amp;lt;- function(){
  sample(1:6, 1)
}&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;15&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;soma_dados &amp;lt;- function(n){
  soma &amp;lt;- 0
  for(i in 1:n){
    soma &amp;lt;- soma + sample(1:6, 1)
  }
  return(soma)
}&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;16&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;resultados &amp;lt;- integer(length = 1000)
for(i in 1:1000){
  resultados[i] &amp;lt;- soma_dados(3)
}
hist(resultados)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;#####../content/r-como-calculadora/respostas_files/figure-html/resp16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>/hello-world/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/hello-world/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div id=&#34;r-markdown&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R Markdown&lt;/h2&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Including Plots&lt;/h2&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;figures/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;hi&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hi&lt;/h2&gt;
&lt;p&gt;This is another file in the same folder.&lt;/p&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>/hello-world/hi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hello-world/hi/</guid>
      <description>/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div id=&#34;hi&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hi&lt;/h2&gt;
&lt;p&gt;This is another file in the same folder.&lt;/p&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
  </channel>
</rss>