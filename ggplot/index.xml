<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ggplots on Curso-R</title>
    <link>/ggplot/index.xml</link>
    <description>Recent content in Ggplots on Curso-R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>Disponível sobre Licença MIT</copyright>
    <lastBuildDate>Tue, 10 Oct 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/ggplot/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Visualizações</title>
      <link>/ggplot/</link>
      <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/ggplot/</guid>
      <description>

&lt;p&gt;Para este tópico vamos utilizar o &lt;code&gt;ggplot2&lt;/code&gt;. O &lt;code&gt;ggplot2&lt;/code&gt; é um pacote do R voltado
para a criação de gráficos estatísticos. Ele é baseado na Gramática dos Gráficos
(&lt;em&gt;grammar of graphics&lt;/em&gt;, em inglês), criado por Leland Wilkinson, que é uma
resposta para a pergunta: o que é um gráfico estatístico? Resumidamente, a gramática
diz que um gráfico estatístico é um mapeamento dos dados a partir de atributos
estéticos (cores, formas, tamanho) em formas geométricas (pontos, linhas, barras).&lt;/p&gt;

&lt;p&gt;Para mais informações sobre a Gramática dos Gráficos, você pode consultar o livro
&lt;a href=&#34;http://www.springer.com/statistics/computational+statistics/book/978-0-387-24544-7&#34;&gt;&lt;em&gt;The Grammar of graphics&lt;/em&gt;&lt;/a&gt;,
escrito pelo Leland Wilkinson e o livro &lt;a href=&#34;http://ggplot2.org/book/&#34;&gt;ggplot2: elegant graphics for data analysis&lt;/a&gt;, do Hadley Wickham.
Um &lt;a href=&#34;http://moderngraphics11.pbworks.com/f/ggplot2-Book09hWickham.pdf&#34;&gt;pdf do livro&lt;/a&gt; também está disponível.&lt;/p&gt;

&lt;p&gt;Para quem quiser se aprofundar mais com o &lt;code&gt;ggplot2&lt;/code&gt;, o &lt;a href=&#34;https://www.datacamp.com/&#34;&gt;DataCamp&lt;/a&gt; possui dois cursos
focados em visualização. É possível começar o curso gratuitamente, mas para terminar,
tem que pagar.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.datacamp.com/courses/data-visualization-with-ggplot2-1&#34;&gt;Data Visualization with ggplot2 (Part 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.datacamp.com/courses/data-visualization-with-ggplot2-2&#34;&gt;Data Visualization with ggplot2 (Part 2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Antes de começar, instale o pacote digitando &lt;code&gt;install.packages(&amp;quot;ggplot2&amp;quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;banco-de-dados&#34;&gt;Banco de dados&lt;/h2&gt;

&lt;p&gt;A seguir, vamos discutir os aspectos básicos para a construção de gráficos com o
pacote &lt;code&gt;ggplot2&lt;/code&gt;. Para isso, utilizaremos o banco de dados contido no objeto &lt;code&gt;mtcars&lt;/code&gt;.
Para visualizar as primeiras linhas deste banco, utilize o comando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(mtcars)
##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;O &lt;code&gt;mtcars&lt;/code&gt; é um banco de dados de 1974 extraído da revista &lt;em&gt;Motor Trend US&lt;/em&gt; que
compreende consumo de combustível e outros 10 aspectos de performance e engenharia
de 32 automóveis.&lt;/p&gt;

&lt;p&gt;Entre as variáveis deste banco de dados estão:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mpg&lt;/code&gt;: consumo de combustível (milhas por galão)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disp&lt;/code&gt;: cilindrada, que é o &lt;a href=&#34;https://pt.wikipedia.org/wiki/Cilindrada&#34;&gt;volume de deslocamento do motor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para saber mais sobre o &lt;code&gt;mtcarts&lt;/code&gt;, digite &lt;code&gt;help(mtcars)&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;as-camadas-de-um-gráfico&#34;&gt;As camadas de um gráfico&lt;/h2&gt;

&lt;p&gt;Antes de mais nada, vamos carregar o &lt;code&gt;ggplot2&lt;/code&gt; usando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No &lt;code&gt;ggplot2&lt;/code&gt;, os gráficos são construídos camada por camada (ou, &lt;em&gt;layers&lt;/em&gt;, em inglês),
sendo que a primeira delas é dada pela função &lt;code&gt;ggplot()&lt;/code&gt; (não tem o &amp;ldquo;2&amp;rdquo;). Cada camada
representa um tipo de mapeamento ou personalização do gráfico. O código abaixo é um
exemplo de um gráfico bem simples, construído a partir das duas principais camadas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mtcars) + 
  geom_point(mapping = aes(x = disp, y = mpg))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//grafico1-1.png&#34; title=&#34;plot of chunk grafico1&#34; alt=&#34;plot of chunk grafico1&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Observe que o primeiro argumento da função &lt;code&gt;ggplot&lt;/code&gt; é um data frame. A função &lt;code&gt;aes()&lt;/code&gt;
descreve como as variáveis são mapeadas em aspectos visuais de formas geométricas
definidas pelos &lt;em&gt;geoms&lt;/em&gt;. Aqui, essas formas geométricas são pontos, selecionados pela
função &lt;code&gt;geom_point()&lt;/code&gt;, gerando, assim, um gráfico de dispersão. A combinação dessas
duas camadas define o tipo de gráfico que você deseja construir.&lt;/p&gt;

&lt;h2 id=&#34;aesthetics&#34;&gt;Aesthetics&lt;/h2&gt;

&lt;p&gt;A primeira camada de um gráfico deve indicar a relação entre os dados e cada aspecto
visual do gráfico, como qual variável será representada no eixo x, qual será
representada no eixo y, a cor e o tamanho dos componentes geométricos etc. Os aspectos
que podem ou devem ser mapeados depende do tipo de gráfico que você deseja fazer.&lt;/p&gt;

&lt;p&gt;No exemplo acima, atribuímos aspectos de posição: ao eixo y mapeamos a variável &lt;code&gt;mpg&lt;/code&gt;
(milhas por galão) e ao eixo x a variável &lt;code&gt;disp&lt;/code&gt; (cilindradas). Outro aspecto que pode
ser mapeado nesse gráfico é a cor dos pontos&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mtcars) + 
  geom_point(mapping = aes(x = disp, y = mpg, colour = as.factor(am)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//mapear_am-1.png&#34; title=&#34;plot of chunk mapear_am&#34; alt=&#34;plot of chunk mapear_am&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora, a variável &lt;code&gt;am&lt;/code&gt; (tipo de transmissão) foi mapeada à cor dos pontos, sendo que pontos vermelhos correspondem à transmissão automática (valor 0) e pontos azuis à transmissão manual (valor 1). Observe que inserimos a variável &lt;code&gt;am&lt;/code&gt; como um fator, pois temos interesse apenas nos valores &amp;ldquo;0&amp;rdquo; e &amp;ldquo;1&amp;rdquo;. No entanto, também podemos mapear uma variável contínua à cor dos pontos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) + 
  geom_point(mapping = aes(x = disp, y = mpg, colour = cyl))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//mapear_cor-1.png&#34; title=&#34;plot of chunk mapear_cor&#34; alt=&#34;plot of chunk mapear_cor&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Aqui, o número de cilindros, &lt;code&gt;cyl&lt;/code&gt;, é representado pela tonalidade da cor azul.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nota&lt;/strong&gt;: por &lt;em&gt;default&lt;/em&gt;, a legenda é insirida no gráfico automaticamente.&lt;/p&gt;

&lt;p&gt;Também podemos mapear o tamanho dos pontos a uma variável de interesse:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) +
  geom_point(mapping = aes(x = disp, y = mpg, colour = cyl, size = wt))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//mapear_tamanaho-1.png&#34; title=&#34;plot of chunk mapear_tamanaho&#34; alt=&#34;plot of chunk mapear_tamanaho&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exercício&lt;/strong&gt;: pesquisar mais aspectos que podem ser alterados no gráfico de dispersão. &lt;a href=&#34;http://ggplot2.tidyverse.org/articles/ggplot2-specs.html&#34;&gt;Essa&lt;/a&gt; é uma
boa referência.&lt;/p&gt;

&lt;h2 id=&#34;geoms&#34;&gt;Geoms&lt;/h2&gt;

&lt;p&gt;Os &lt;em&gt;geoms&lt;/em&gt; definem qual forma geométrica será utilizada para a visualização dos
dados no gráfico. Como já vimos, a função &lt;code&gt;geom_point()&lt;/code&gt; gera gráficos de dispersão
transformando pares (x,y) em pontos. Veja a seguir outros &lt;em&gt;geoms&lt;/em&gt; bastante utilizados:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;geom_line&lt;/code&gt; - para linhas definidas por pares (x,y)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_abline&lt;/code&gt; - para retas definidas por um intercepto e uma inclinação&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_hline&lt;/code&gt; - para retas horizontais&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_boxplot&lt;/code&gt; - para boxplots&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_histogram&lt;/code&gt; - para histogramas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_density&lt;/code&gt; - para densidades&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_area&lt;/code&gt; - para áreas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_bar&lt;/code&gt; - para barras&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Veja a seguir como é fácil gerar diversos gráficos diferentes utilizando a mesma estrutura do gráfico de dispersão acima:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) + 
  geom_boxplot(aes(x = as.factor(cyl), y = mpg))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-7-1.png&#34; title=&#34;plot of chunk unnamed-chunk-7&#34; alt=&#34;plot of chunk unnamed-chunk-7&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; que para fazer um boxplot para cada grupo, precisamos passar para o aspecto
x do gráfico uma variável do tipo &lt;code&gt;factor&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) + 
  geom_histogram(aes(x = mpg))
## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-8-1.png&#34; title=&#34;plot of chunk unnamed-chunk-8&#34; alt=&#34;plot of chunk unnamed-chunk-8&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) + 
  geom_bar(aes(x = as.factor(cyl)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-9-1.png&#34; title=&#34;plot of chunk unnamed-chunk-9&#34; alt=&#34;plot of chunk unnamed-chunk-9&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;div class=&#39;admonition note&#39;&gt;
&lt;p class=&#39;admonition-title&#39;&gt;
Um padrão para os gráficos
&lt;/p&gt;
&lt;p&gt;
Você deve ter percebido que, para fazer um gráfico usando `ggplot2` e a gramática
dos gráficos, existe um padrão:
&lt;br&gt; 
&lt;br&gt;
ggplot(data = DATA) + GEOM_FUNCTION(mapping = aes(MAPPINGS))
&lt;br&gt;
&lt;br&gt;
Para fazer um gráfico, basta substituir DATA por um banco de dados, GEOM_FUNCTION por
uma função geométrica e MAPPINGS por uma coleção de &lt;b&gt;mapas estéticos&lt;/b&gt;. Isso será muito útil quando você for fazer o seu próprio gráfico.
&lt;/p&gt;
&lt;/div&gt;

&lt;h3 id=&#34;exercícios&#34;&gt;Exercícios&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Rode &lt;code&gt;ggplot(data = mtcars)&lt;/code&gt;. O que você vê?&lt;/li&gt;
&lt;li&gt;Quantas linhas existem no &lt;code&gt;mtcars&lt;/code&gt;. Quantas colunas? &lt;strong&gt;Dica&lt;/strong&gt;: use a função &lt;code&gt;nrows&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;O que a variável &lt;code&gt;qsec&lt;/code&gt; descreve. Leia o help do &lt;code&gt;mtcars&lt;/code&gt; para encontrar.&lt;/li&gt;
&lt;li&gt;Faça um gráfico de dispersão de &lt;code&gt;mpg&lt;/code&gt; por &lt;code&gt;qsec&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;O que acontece se você fizer um gráfico de dispersão de &lt;code&gt;vs&lt;/code&gt; por &lt;code&gt;mpg&lt;/code&gt;? Porque o
gráfico não é útil?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;combinando-gráficos&#34;&gt;Combinando gráficos&lt;/h2&gt;

&lt;p&gt;Considere os 2 gráficos a seguir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# esquerda
ggplot(mtcars) + 
  geom_point(aes(y = mpg, x = disp))
# direita
ggplot(mtcars) + 
  geom_smooth(aes(y = mpg, x = disp))
## `geom_smooth()` using method = &#39;loess&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//duplochunk-1.png&#34; title=&#34;plot of chunk duplochunk&#34; alt=&#34;plot of chunk duplochunk&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;img src=&#34;figures//duplochunk-2.png&#34; title=&#34;plot of chunk duplochunk&#34; alt=&#34;plot of chunk duplochunk&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Os gráficos são similares e completaam-se. O da esquerda, mostra como os pontos estão distribuídos. Ele mostra uma tendência de aumento do consumo de combustível de acordo
com as cilindradas. Já o gráfico da direita resume essa relação. Simplificando-a para uma linha de tendência com alguma margem de confiança.&lt;/p&gt;

&lt;p&gt;Esses dois gráficos se completam e ficam bons juntos. Com o &lt;code&gt;ggplot2&lt;/code&gt;, é muito fácil
sobrepor os dois gráficos, pois ele é pensado para que cada gráfico seja feito com
uma combinação de camadas. Veja o código abaixo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) + 
  geom_point(aes(y = mpg, x = disp)) +
  geom_smooth(aes(y = mpg, x = disp))
## `geom_smooth()` using method = &#39;loess&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-10-1.png&#34; title=&#34;plot of chunk unnamed-chunk-10&#34; alt=&#34;plot of chunk unnamed-chunk-10&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Desta forma, sobrepusemos os pontos e a linha de suavização. No entanto, duplicamos alguns trechos no nosso código, o que geralmente não é bom. Imagine se você precisar
mudar a variável do eixo &lt;code&gt;y&lt;/code&gt;, você precisará trocar o nome da variável em mais de um
lugar do código. Para resolver isso, você pode definir o &lt;em&gt;mapping&lt;/em&gt; apenas uma vez
dentro da declaração do gráfico, conforme o código a seguir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point() +
  geom_smooth()
## `geom_smooth()` using method = &#39;loess&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-11-1.png&#34; title=&#34;plot of chunk unnamed-chunk-11&#34; alt=&#34;plot of chunk unnamed-chunk-11&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Veja que isso gera o mesmo gráfico!&lt;/p&gt;

&lt;p&gt;Veja que mesmo com dois &lt;code&gt;geom&lt;/code&gt;&amp;rsquo;s, o &lt;code&gt;ggplot&lt;/code&gt; segue a mesma regra para mapear as
variáveis para as &lt;code&gt;aesthetics&lt;/code&gt;. Por exemplo, se você mapear uma variável para
a cor, você obterá o seguinte gráfico.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp, colour = as.factor(cyl))) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-12-1.png&#34; title=&#34;plot of chunk unnamed-chunk-12&#34; alt=&#34;plot of chunk unnamed-chunk-12&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O &lt;code&gt;ggplot2&lt;/code&gt; agora desenhou uma reta para cada um dos grupos de pontos e coloriu
cada grupo de pontos de uma cor diferente. Em alguns casos, você pode querer mapear
a cor em apenas uma das camadas do gráfico. Isso pode ser feito da seguinte forma:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point(aes(colour = as.factor(cyl))) +
  geom_smooth(method = &amp;quot;lm&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-13-1.png&#34; title=&#34;plot of chunk unnamed-chunk-13&#34; alt=&#34;plot of chunk unnamed-chunk-13&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora, cada grupo de pontos tem uma cor, mas a reta é única para todos os pontos.&lt;/p&gt;

&lt;h2 id=&#34;alterando-os-padrões-do-gráfico&#34;&gt;Alterando os padrões do gráfico&lt;/h2&gt;

&lt;p&gt;Até agora, sempre &lt;em&gt;mapeamos&lt;/em&gt; uma forma estética à uma variável. Muitas vezes
queremos apenas modificar esta forma estética sem mapeá-la a outra variável.
Por exemplo, no gráfico a seguir, modificamos a cor de todos os pontos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point(colour = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-14-1.png&#34; title=&#34;plot of chunk unnamed-chunk-14&#34; alt=&#34;plot of chunk unnamed-chunk-14&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A principal diferença aqui é que especificamos o argumento &lt;code&gt;colour&lt;/code&gt; fora da função
&lt;code&gt;aes&lt;/code&gt;. Dessa forma, podemos controlar todos os parâmetros
de cada forma geométrica.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point(colour = &amp;quot;red&amp;quot;, size = 2, shape = 3, alpha = 0.5)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-15-1.png&#34; title=&#34;plot of chunk unnamed-chunk-15&#34; alt=&#34;plot of chunk unnamed-chunk-15&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;facets&#34;&gt;Facets&lt;/h2&gt;

&lt;p&gt;Uma funcionalidade muito útil do &lt;code&gt;ggplot2&lt;/code&gt; é a possibilidade de usar &lt;code&gt;facets&lt;/code&gt;.
Isso auxilia na visualização de diferentes subconjuntos dos dados em gráficos
separados, permitindo a visualização de comportamentos diferentes dependendo
do grupo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) + 
  facet_wrap(~am)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-16-1.png&#34; title=&#34;plot of chunk unnamed-chunk-16&#34; alt=&#34;plot of chunk unnamed-chunk-16&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;No gráfico acima, rapidamente conseguimos visualizar que se o carro não é automático o consumo de combustível é muito menor do que quando o carro é automático. Também conseguimos ver que a inclinação das retas é bem diferente dependendo do carro ser
automático/manual.&lt;/p&gt;

&lt;h3 id=&#34;exercício&#34;&gt;&lt;strong&gt;Exercício&lt;/strong&gt;&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;O que tem de errado no código abaixo? Por que os pontos não ficaram azuis?&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy, color = &amp;quot;blue&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-19-1.png&#34; title=&#34;plot of chunk unnamed-chunk-19&#34; alt=&#34;plot of chunk unnamed-chunk-19&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Mapeie uma variável contínua para uma cor, tamanho e forma. Como essas formas
estéticas se comportam diferente para variáveis categóricas vs. contínuas?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Começando de um simples boxplot feito no &lt;code&gt;ggplot2&lt;/code&gt; vamos fazer diversas alterações nas legendas. O gráfico inicial é construido da seguinte forma:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)
# boxplot simples
bp &amp;lt;- ggplot(data=PlantGrowth, aes(x=group, y=weight, fill=group)) + geom_boxplot()
bp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-21-1.png&#34; title=&#34;plot of chunk unnamed-chunk-21&#34; alt=&#34;plot of chunk unnamed-chunk-21&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;removendo-totalmente-a-legenda&#34;&gt;Removendo totalmente a legenda&lt;/h2&gt;

&lt;p&gt;Existem diversas maneiras para remover a legenda de um gráfico no &lt;code&gt;ggplot2&lt;/code&gt;. A forma mais simples é usar &lt;code&gt;guides(fill = FALSE)&lt;/code&gt; com &lt;code&gt;fill&lt;/code&gt; sendo o atributo gráfico do qual você deseja remover a legenda.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# aqui definimos fill = FALSE, porque é o atributo do gráfico que relacionamos 
# a alguma variável.
bp + guides(fill = FALSE)

# também é possível remover a legenda por meio da escala de cores
# aqui também usamos o scale_fill_discrete, porque associamos fill
# a uma variável anteriormente.
bp + scale_fill_discrete(guide = F)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-22-1.png&#34; title=&#34;plot of chunk unnamed-chunk-22&#34; alt=&#34;plot of chunk unnamed-chunk-22&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;img src=&#34;figures//unnamed-chunk-22-2.png&#34; title=&#34;plot of chunk unnamed-chunk-22&#34; alt=&#34;plot of chunk unnamed-chunk-22&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# o comando a seguir remove todas as legendas, não importa o atributo que ela
# esteja representando.
bp + theme(legend.position=&amp;quot;none&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-23-1.png&#34; title=&#34;plot of chunk unnamed-chunk-23&#34; alt=&#34;plot of chunk unnamed-chunk-23&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;alterando-a-ordem-dos-itens&#34;&gt;Alterando a ordem dos itens&lt;/h2&gt;

&lt;p&gt;Para alterar a ordem dos itens na legenda do gráfico no &lt;code&gt;ggplot2&lt;/code&gt;, usamos o comando da escala de cores.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + scale_fill_discrete(breaks=c(&amp;quot;trt1&amp;quot;,&amp;quot;ctrl&amp;quot;,&amp;quot;trt2&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-24-1.png&#34; title=&#34;plot of chunk unnamed-chunk-24&#34; alt=&#34;plot of chunk unnamed-chunk-24&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-24-2.png&#34; title=&#34;plot of chunk unnamed-chunk-24&#34; alt=&#34;plot of chunk unnamed-chunk-24&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Dependendo dos aspectos gráficos (cores, formatos, preenchimentos) especificados, você pode precisar usar alguma das seguintes funções: &lt;code&gt;scale_fill_manual&lt;/code&gt;, &lt;code&gt;scale_colour_hue&lt;/code&gt;, &lt;code&gt;scale_colour_manual&lt;/code&gt;, &lt;code&gt;scale_shape_discrete&lt;/code&gt;, &lt;code&gt;scale_linetype_discrete&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Você pode também querer inverter a ordem dos itens da legenda. Isso pode ser feito de uma das seguintes maneiras.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + guides(fill = guide_legend(reverse=TRUE))
bp + scale_fill_discrete(guide = guide_legend(reverse=TRUE))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-25-1.png&#34; title=&#34;plot of chunk unnamed-chunk-25&#34; alt=&#34;plot of chunk unnamed-chunk-25&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;img src=&#34;figures//unnamed-chunk-25-2.png&#34; title=&#34;plot of chunk unnamed-chunk-25&#34; alt=&#34;plot of chunk unnamed-chunk-25&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;removendo-os-títulos-da-legenda&#34;&gt;Removendo os títulos da legenda&lt;/h2&gt;

&lt;p&gt;Algumas vezes é necessário remover o título das legendas do gráfico feito no &lt;code&gt;ggplot2&lt;/code&gt;.
Veja a seguir algumas maneiras:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Remove o título apenas da legenda do preenchimento (fill)
bp + guides(fill=guide_legend(title=NULL))

# Remove o título de todas as legendas
bp + theme(legend.title=element_blank())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-26-1.png&#34; title=&#34;plot of chunk unnamed-chunk-26&#34; alt=&#34;plot of chunk unnamed-chunk-26&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;img src=&#34;figures//unnamed-chunk-26-2.png&#34; title=&#34;plot of chunk unnamed-chunk-26&#34; alt=&#34;plot of chunk unnamed-chunk-26&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;modificando-texto-cores-e-rótulos&#34;&gt;Modificando texto, cores e rótulos&lt;/h2&gt;

&lt;p&gt;Existem duas formas para modificar os textos e rótulos das legendas. Uma delas é modificar o &lt;code&gt;data.frame&lt;/code&gt; de forma com que os fatores tenham o mesmo nome que você deseja na legenda. Outra forma é usando as funções de &lt;code&gt;scale&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Veja algumas modificações que podem ser feitas por meio das funções de &lt;code&gt;scale&lt;/code&gt;. Como a variável &lt;code&gt;group&lt;/code&gt; está associada ao atributo &lt;code&gt;fill&lt;/code&gt;, usamos as funções &lt;code&gt;scale_fill_xxx&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# usamos scale_fill_discrete porque não queremos alterar as cores padrão,
# mas queremos que cada fator esteja associado a uma cor de tom diferente.
# mudamos aqui os rótulos e o título da legenda.
bp + scale_fill_discrete(name=&amp;quot;Experimental\nCondition&amp;quot;,
                         breaks=c(&amp;quot;ctrl&amp;quot;, &amp;quot;trt1&amp;quot;, &amp;quot;trt2&amp;quot;),
                         labels=c(&amp;quot;Control&amp;quot;, &amp;quot;Treatment 1&amp;quot;, &amp;quot;Treatment 2&amp;quot;))


# usamos scale_fill_manual porque queremos alterar as cores padrão.
# aqui escolhemos as cores da escala hexadecimal.
bp + scale_fill_manual(values=c(&amp;quot;#999999&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#56B4E9&amp;quot;), 
                       name=&amp;quot;Experimental\nCondition&amp;quot;,
                       breaks=c(&amp;quot;ctrl&amp;quot;, &amp;quot;trt1&amp;quot;, &amp;quot;trt2&amp;quot;),
                       labels=c(&amp;quot;Control&amp;quot;, &amp;quot;Treatment 1&amp;quot;, &amp;quot;Treatment 2&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-27-1.png&#34; title=&#34;plot of chunk unnamed-chunk-27&#34; alt=&#34;plot of chunk unnamed-chunk-27&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;img src=&#34;figures//unnamed-chunk-27-2.png&#34; title=&#34;plot of chunk unnamed-chunk-27&#34; alt=&#34;plot of chunk unnamed-chunk-27&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Veja que isso não aletrou o eixo X do gráfico.&lt;/p&gt;

&lt;h2 id=&#34;modificando-a-aparência-da-legenda&#34;&gt;Modificando a aparência da legenda&lt;/h2&gt;

&lt;p&gt;Existem inúmeras modificações que podem ser realizadas na aparência da legenda. Todas elas estão relacionadas à modificação do &lt;code&gt;element_text&lt;/code&gt;. Veja neste &lt;a href=&#34;http://docs.ggplot2.org/0.9.2.1/element_text.html&#34;&gt;link&lt;/a&gt; todos os atributos que podem ser modificados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Mudando a aparência do título
bp + theme(legend.title = element_text(colour=&amp;quot;blue&amp;quot;, size=16, face=&amp;quot;bold&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-28-1.png&#34; title=&#34;plot of chunk unnamed-chunk-28&#34; alt=&#34;plot of chunk unnamed-chunk-28&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Mudando a aparência dos rótulos
bp + theme(legend.text = element_text(colour=&amp;quot;blue&amp;quot;, size = 16, face = &amp;quot;bold&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-29-1.png&#34; title=&#34;plot of chunk unnamed-chunk-29&#34; alt=&#34;plot of chunk unnamed-chunk-29&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;modificando-a-posição-da-legenda&#34;&gt;Modificando a posição da legenda&lt;/h2&gt;

&lt;p&gt;É possível controlar a posição da legenda facilmente escolhendo uma das posições (left/right/top/bottom).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + theme(legend.position=&amp;quot;top&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-30-1.png&#34; title=&#34;plot of chunk unnamed-chunk-30&#34; alt=&#34;plot of chunk unnamed-chunk-30&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Também é possível controlar a posição da legenda de forma precisa usando a função &lt;code&gt;theme()&lt;/code&gt;. A legenda será posicionada dentro do gráfico com o ponto central sendo o valor do argumento &lt;code&gt;legend.position&lt;/code&gt;. Esses valores são definidos de forma que o ponto (0,0) seja o canto inferior esquerdo e (1,1) seja o canto superior direito.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + theme(legend.position=c(.5, .5))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-31-1.png&#34; title=&#34;plot of chunk unnamed-chunk-31&#34; alt=&#34;plot of chunk unnamed-chunk-31&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>