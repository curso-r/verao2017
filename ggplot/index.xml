<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ggplots on Curso-R</title>
    <link>/ggplot/index.xml</link>
    <description>Recent content in Ggplots on Curso-R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <copyright>Disponível sobre Licença MIT</copyright>
    <lastBuildDate>Sun, 03 Dec 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/ggplot/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Visualizações</title>
      <link>/ggplot/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/ggplot/</guid>
      <description>

&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;

&lt;p&gt;Agora que já temos em mãos as ferramentas para importar, arrumar e transformar os nossos dados, é hora de começarmos a extrair informações deles. Seguindo o nosso bom e velho ciclo da ciência de dados, o próximo passo é a construção de &lt;em&gt;visualizações&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/data-science.png&#34; title=&#34;plot of chunk unnamed-chunk-9&#34; alt=&#34;plot of chunk unnamed-chunk-9&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A visualização dos dados é uma etapa importantíssima da análise estatística, pois é a partir dela que criamos a intuição necessária para escolher o teste ou modelo mais adequado para o nosso problema.&lt;/p&gt;

&lt;p&gt;Visualizações podem ser uma simples medida resumo (frequência, média, variância, mínimo, máximo, &amp;hellip;), um conjunto dessas medidas organizadas em uma tabela ou a representação (de uma parte) dos dados em um gráfico. Nesse tópico, focaremos na construção de gráficos, uma tarefa que, apesar de nem sempre ser conceitualmente ou tecnicamente trivial, é muito facilitada pelas ferramentas disponíveis no R.&lt;/p&gt;

&lt;p&gt;Mas antes de mais nada, o que é um gráfico estatístico?&lt;/p&gt;

&lt;h2 id=&#34;o-que-é-um-gráfico&#34;&gt;O que é um gráfico?&lt;/h2&gt;

&lt;p&gt;A construção de gráficos no R foi revolucionada com a criação do pacote &lt;code&gt;ggplot2&lt;/code&gt;, fruto da tese de doutorado de &lt;a href=&#34;https://github.com/hadley&#34;&gt;Hadley Wickham&lt;/a&gt;. Essa revolução teve base na filosofia adotada por Hadley ao definir o que deveria ser um gráfico estatístico.&lt;/p&gt;

&lt;p&gt;Mas será que podemos definir formalmente o que é um gráfico estatístico? Graças ao estatístico norte-americano Leland Wilkinson, a resposta é sim.&lt;/p&gt;

&lt;p&gt;Em 2005, Leland publicou o livro &lt;a href=&#34;http://www.springer.com/statistics/computational+statistics/book/978-0-387-24544-7&#34;&gt;&lt;em&gt;The Grammar of graphics&lt;/em&gt;&lt;/a&gt;, uma fonte de princípios fundamentais para a construção de gráficos estatísticos. No livro, ele defende que um gráfico é o mapeamento dos dados a partir de atributos estéticos (posição, cor, forma, tamanho) de objetos geométricos (pontos, linhas, barras, caixas).&lt;/p&gt;

&lt;p&gt;A partir dessa definição, Hadley escreveu &lt;a href=&#34;http://vita.had.co.nz/papers/layered-grammar.html&#34;&gt;A Layered Grammar of Graphics&lt;/a&gt;, sugerindo que os principais aspectos de um gráfico (dados, sistema de coordenadas, rótulos e anotações) podiam ser divididos em camadas, construídas uma a uma na elaboração do gráfico. Essa é a essência do &lt;code&gt;ggplot2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Além de uma filosofia bem fundamentada, o &lt;code&gt;ggplot2&lt;/code&gt; ainda traz outras vantagens em relação aos gráficos do r base:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gráficos naturalmente mais bonitos;&lt;/li&gt;
&lt;li&gt;muito mais fácil deixar o gráfico do jeito que você quer;&lt;/li&gt;
&lt;li&gt;a estrutura padronizada das funções deixa o aprendizado muito mais intuitivo; e&lt;/li&gt;
&lt;li&gt;é possível criar uma imensa gama de gráficos com poucas linhas de código.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para discutir os principais aspectos da construção de gráficos com o &lt;code&gt;ggplot2&lt;/code&gt;, vamos utilizar inicialmente a base disponível no objeto &lt;code&gt;mtcars&lt;/code&gt;. Essa base de 1974 contém dados extraídos da revista &lt;em&gt;Motor Trend US&lt;/em&gt; sobre o consumo de combustível e características de performance e engenharia de 32 automóveis.&lt;/p&gt;

&lt;p&gt;Se você não está familiarizado com esta base, rode &lt;code&gt;help(mtcars)&lt;/code&gt; para mais informações.&lt;/p&gt;

&lt;p&gt;Na próxima seção, vamos conhecer as principais funções do &lt;code&gt;ggplot2&lt;/code&gt; e começar a construir nossos primeiros gráficos. Não se esqueça de instalar e carregar o pacote antes de tentar rodas os exemplos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;install.packages(&amp;quot;ggplot2&amp;quot;)
library(ggplot2)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;as-camadas-de-um-gráfico&#34;&gt;As camadas de um gráfico&lt;/h2&gt;

&lt;p&gt;No &lt;code&gt;ggplot2&lt;/code&gt;, os gráficos são construídos camada por camada (ou, &lt;em&gt;layers&lt;/em&gt;, em inglês), sendo a primeira delas dada pela função &lt;code&gt;ggplot()&lt;/code&gt; (repare que não tem o &amp;ldquo;2&amp;rdquo;). Essa função recebe um data frame e cria a camada base do gráfico. Se rodarmos apenas a função &lt;code&gt;ggplot()&lt;/code&gt;, obteremos um painel em branco.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mtcars)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-12-1.png&#34; title=&#34;plot of chunk unnamed-chunk-12&#34; alt=&#34;plot of chunk unnamed-chunk-12&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Apesar de termos passados os dados para a função, precisamos especificar como as observações serão mapeadas nos aspectos visuais do gráfico e quais formas geométricas serão utilizadas para isso. Cada camada do gráfico representará um tipo de mapeamento ou personalização. O código abaixo é um exemplo de um gráfico bem simples, construído a partir das duas principais camadas.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mtcars) + 
  geom_point(mapping = aes(x = disp, y = mpg))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//grafico1-1.png&#34; title=&#34;plot of chunk grafico1&#34; alt=&#34;plot of chunk grafico1&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A figura gerada pelo código acima é um gráfico de dispersão. Observe que:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;como vimos, a primeira camada é dada pela função &lt;code&gt;ggplot()&lt;/code&gt; e recebe um data frame;&lt;/li&gt;
&lt;li&gt;a segunda camada é dada pela função &lt;code&gt;geom_point()&lt;/code&gt;, especificando a forma &lt;strong&gt;geom&lt;/strong&gt;étrica utilizada no mapeamento das observações;&lt;/li&gt;
&lt;li&gt;as camadas são somadas com um &lt;code&gt;+&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;o mapeamento na função &lt;code&gt;geom_point()&lt;/code&gt; recebe a função &lt;code&gt;aes()&lt;/code&gt;, responsável por descrever como as variáveis serão mapeadas nos aspectos visuais da forma geométrica escolhida, no caso, pontos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A combinação da função &lt;code&gt;ggplot()&lt;/code&gt; e de uma ou mais funções &lt;code&gt;geom_()&lt;/code&gt; definirá o tipo de gráfico gerado.&lt;/p&gt;

&lt;div class=&#39;admonition note&#39;&gt;
&lt;p class=&#39;admonition-title&#39;&gt;
Cuidado
&lt;/p&gt;
&lt;p&gt;
As camadas dos gráficos são empilhadas utilizando-se o sinal +. Como a estrutura é muito parecida com uma pipe line, é comum trocarmos o + por um %&gt;% no meio do código.
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Podemos acrescentar uma terceira camada ao gráfico, agora com uma personalização. Repare como é simples acrescentar labels ao gráfico com a função &lt;code&gt;labs()&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mtcars) + 
  geom_point(mapping = aes(x = disp, y = mpg)) +
  labs(x = &amp;quot;Cilindradas&amp;quot;, y = &amp;quot;Milhas/galão&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-13-1.png&#34; title=&#34;plot of chunk unnamed-chunk-13&#34; alt=&#34;plot of chunk unnamed-chunk-13&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora que você já sabe como a estrutura de camadas do &lt;code&gt;ggplot&lt;/code&gt; funciona, vamos estudar com mais atenção para que serve a função &lt;code&gt;aes()&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;aesthetics&#34;&gt;Aesthetics&lt;/h2&gt;

&lt;p&gt;O papel da função &lt;code&gt;aes()&lt;/code&gt; (de aesthetics, estética em inglês) é indicar a relação entre os dados e cada aspecto visual do gráfico, como qual variável será representada no eixo x, qual será representada no eixo y, a cor e o tamanho dos componentes geométricos etc. Os aspectos que podem ou devem ser mapeados depende do tipo de gráfico que você está construindo.&lt;/p&gt;

&lt;p&gt;No exemplo anterior, atribuímos aspectos de posição: ao eixo y mapeamos a variável &lt;code&gt;mpg&lt;/code&gt; (milhas por galão) e ao eixo x a variável &lt;code&gt;disp&lt;/code&gt; (cilindradas). Note que os valores dos labels não são mapeados por variáveis, mas sim diretamente especificados.&lt;/p&gt;

&lt;p&gt;Outro aspecto que pode ser mapeado nesse gráfico é a cor dos pontos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mtcars) + 
  geom_point(mapping = aes(x = disp, y = mpg, color = as.factor(am)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//mapear_am-1.png&#34; title=&#34;plot of chunk mapear_am&#34; alt=&#34;plot of chunk mapear_am&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora, a variável &lt;code&gt;am&lt;/code&gt; (tipo de transmissão) foi mapeada à cor dos pontos, com pontos vermelhos correspondendo à transmissão automática (valor 0) e pontos azuis à transmissão manual (valor 1). Observe que inserimos a variável &lt;code&gt;am&lt;/code&gt; como um fator, pois temos interesse apenas nos valores &amp;ldquo;0&amp;rdquo; e &amp;ldquo;1&amp;rdquo;. No entanto, também podemos mapear uma variável contínua à cor dos pontos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) + 
  geom_point(mapping = aes(x = disp, y = mpg, colour = cyl))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//mapear_cor-1.png&#34; title=&#34;plot of chunk mapear_cor&#34; alt=&#34;plot of chunk mapear_cor&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Aqui, o número de cilindros, &lt;code&gt;cyl&lt;/code&gt;, é representado pela tonalidade da cor azul. Note que, por padrão, a legenda é inserida automaticamente ao gráfico.&lt;/p&gt;

&lt;p&gt;Também podemos mapear o tamanho dos pontos a uma variável de interesse:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) +
  geom_point(mapping = aes(x = disp, y = mpg, color = cyl, size = wt))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//mapear_tamanaho-1.png&#34; title=&#34;plot of chunk mapear_tamanaho&#34; alt=&#34;plot of chunk mapear_tamanaho&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Segue abaixo uma lista dos aspectos visuais mais utilizados:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;color=&lt;/code&gt;: altera a cor de formas que não têm área (pontos e retas).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fill=&lt;/code&gt;: altera a cor de formas com área (barras, caixas, densidades, áreas).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;size=&lt;/code&gt;: altera o tamanho de formas.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type=&lt;/code&gt;: altera o tipo da forma, geralmente usada para pontos.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;linetype=&lt;/code&gt;: altera o tipo da linha.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Até agora, sempre mapeamos um aspecto estético a uma variável. Muitas vezes
queremos apenas modificar um aspecto sem mapeá-lo a variáveis.
Por exemplo, no gráfico a seguir, modificamos a cor de todos os pontos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point(color = &amp;quot;red&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-14-1.png&#34; title=&#34;plot of chunk unnamed-chunk-14&#34; alt=&#34;plot of chunk unnamed-chunk-14&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;A principal diferença aqui é que especificamos o argumento &lt;code&gt;color=&lt;/code&gt; fora da função
&lt;code&gt;aes()&lt;/code&gt;. Dessa forma, podemos controlar todos os aspectos de uma forma geométrica.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point(colour = &amp;quot;red&amp;quot;, size = 2, shape = 3, alpha = 0.5)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-15-1.png&#34; title=&#34;plot of chunk unnamed-chunk-15&#34; alt=&#34;plot of chunk unnamed-chunk-15&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;geoms&#34;&gt;Geoms&lt;/h2&gt;

&lt;p&gt;Os &lt;em&gt;geoms&lt;/em&gt; definem qual forma geométrica será utilizada para a visualização das observações. Como já vimos, a função &lt;code&gt;geom_point()&lt;/code&gt; gera gráficos de dispersão
transformando pares $(x,y)$ em pontos. Veja a seguir outros &lt;em&gt;geoms&lt;/em&gt; bastante utilizados:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;geom_line&lt;/code&gt; - para linhas definidas por pares (x,y).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_abline&lt;/code&gt; - para retas definidas por um intercepto e uma inclinação.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_hline&lt;/code&gt; - para retas horizontais.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_bar&lt;/code&gt; - para barras.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_histogram&lt;/code&gt; - para histogramas.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_boxplot&lt;/code&gt; - para boxplots.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_density&lt;/code&gt; - para densidades.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;geom_area&lt;/code&gt; - para áreas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Veja a seguir como é fácil gerar diversos gráficos diferentes utilizando a mesma estrutura do gráfico de dispersão acima:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) + 
  geom_boxplot(aes(x = as.factor(cyl), y = mpg))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-16-1.png&#34; title=&#34;plot of chunk unnamed-chunk-16&#34; alt=&#34;plot of chunk unnamed-chunk-16&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Note que para fazer um boxplot para cada grupo, precisamos passar um fator para o aspecto x do gráfico.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) + 
  geom_histogram(aes(x = mpg))
## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-17-1.png&#34; title=&#34;plot of chunk unnamed-chunk-17&#34; alt=&#34;plot of chunk unnamed-chunk-17&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Enquanto o gráfico e dispersão demandam o mapeamento das posições x e y, o histograma requer apenas a posição x, já que, pela definição do gráfico, o eixo mostra a frequência de cada classe. O mesmo acontece com o gráfico de barras:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) + 
  geom_bar(aes(x = as.factor(cyl)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-18-1.png&#34; title=&#34;plot of chunk unnamed-chunk-18&#34; alt=&#34;plot of chunk unnamed-chunk-18&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exercício&lt;/strong&gt;: explorar novos &lt;code&gt;geom()&lt;/code&gt;&amp;rsquo;s e mexer nos mapeamentos estéticos desses novos gráficos. &lt;a href=&#34;http://ggplot2.tidyverse.org/articles/ggplot2-specs.html&#34;&gt;Essa é uma
boa referência&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#39;admonition note&#39;&gt;
&lt;p class=&#39;admonition-title&#39;&gt;
Um padrão para os gráficos
&lt;/p&gt;
&lt;p&gt;
Você deve ter percebido que, para fazer um gráfico usando `ggplot2` e a gramática
dos gráficos, existe um padrão:
&lt;br&gt; 
&lt;br&gt;
ggplot(data = DATA) + GEOM_FUNCTION(mapping = aes(MAPPINGS))
&lt;br&gt;
&lt;br&gt;
Para fazer um gráfico, basta substituir DATA por um banco de dados, GEOM_FUNCTION por
uma função geométrica e MAPPINGS por uma coleção de &lt;b&gt;mapas estéticos&lt;/b&gt;. Isso será muito útil quando você for fazer o seu próprio gráfico.
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Agora, considere os 2 gráficos a seguir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# esquerda
ggplot(mtcars) + 
  geom_point(aes(y = mpg, x = disp))
# direita
ggplot(mtcars) + 
  geom_smooth(aes(y = mpg, x = disp))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//duplochunk-1.png&#34; title=&#34;plot of chunk duplochunk&#34; alt=&#34;plot of chunk duplochunk&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;img src=&#34;figures//duplochunk-2.png&#34; title=&#34;plot of chunk duplochunk&#34; alt=&#34;plot of chunk duplochunk&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Os gráficos são similares e se completam. O da esquerda, mostra como os pontos estão distribuídos, indicando uma relação entre as cilindradas e o consumo de gasolina. Já o gráfico da direita resume essa relação com uma curva de tendência e sua margem de confiança.&lt;/p&gt;

&lt;p&gt;Como o &lt;code&gt;ggplot2&lt;/code&gt; é pensado para que cada gráfico seja feito como uma combinação de camadas, é muito fácil sobrepor esses dois gráficos.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) + 
  geom_point(aes(y = mpg, x = disp)) +
  geom_smooth(aes(y = mpg, x = disp))
## `geom_smooth()` using method = &#39;loess&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-19-1.png&#34; title=&#34;plot of chunk unnamed-chunk-19&#34; alt=&#34;plot of chunk unnamed-chunk-19&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Desta forma, sobrepusemos os pontos e a linha de suavização. No entanto, duplicamos alguns trechos no nosso código, o que geralmente não é bom. Imagine se você precisar
mudar a variável do eixo &lt;code&gt;y&lt;/code&gt;, você precisará trocar o nome da variável em mais de um
lugar do código. Para resolver isso, você pode definir o &lt;em&gt;mapping&lt;/em&gt; apenas uma vez
dentro da declaração do gráfico, conforme o código a seguir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point() +
  geom_smooth()
## `geom_smooth()` using method = &#39;loess&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-20-1.png&#34; title=&#34;plot of chunk unnamed-chunk-20&#34; alt=&#34;plot of chunk unnamed-chunk-20&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Veja que isso gera o mesmo gráfico!&lt;/p&gt;

&lt;p&gt;Veja que mesmo com dois &lt;code&gt;geom&lt;/code&gt;&amp;rsquo;s, o &lt;code&gt;ggplot&lt;/code&gt; segue a mesma regra para mapear as
variáveis para os aspectos visuais. Por exemplo, se você mapear uma variável para
a cor, você obterá o seguinte gráfico.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp, colour = as.factor(cyl))) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-21-1.png&#34; title=&#34;plot of chunk unnamed-chunk-21&#34; alt=&#34;plot of chunk unnamed-chunk-21&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O &lt;code&gt;ggplot2&lt;/code&gt; agora desenhou uma reta para cada um dos grupos de pontos e coloriu
cada grupo de pontos de uma cor diferente. Em alguns casos, você pode querer mapear
a cor em apenas uma das camadas do gráfico. Isso pode ser feito da seguinte forma:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point(aes(colour = as.factor(cyl))) +
  geom_smooth(method = &amp;quot;lm&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-22-1.png&#34; title=&#34;plot of chunk unnamed-chunk-22&#34; alt=&#34;plot of chunk unnamed-chunk-22&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Agora, cada grupo de pontos tem uma cor, mas a reta é única para todos os pontos.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;facets&#34;&gt;Facets&lt;/h2&gt;

&lt;p&gt;Uma funcionalidade muito útil do &lt;code&gt;ggplot2&lt;/code&gt; é a possibilidade de usar &lt;code&gt;facets&lt;/code&gt;.
Isso auxilia na visualização de diferentes subconjuntos dos dados em gráficos
separados, permitindo a visualização de comportamentos diferentes dependendo
do grupo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(y = mpg, x = disp)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;) + 
  facet_wrap(~am)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-23-1.png&#34; title=&#34;plot of chunk unnamed-chunk-23&#34; alt=&#34;plot of chunk unnamed-chunk-23&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;No gráfico acima, rapidamente conseguimos visualizar que se o carro não é automático o consumo de combustível é muito menor do que quando o carro é automático. Também conseguimos ver que a inclinação das retas é bem diferente dependendo do carro ser
automático/manual.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Exercício&lt;/strong&gt;: pesquisar o que faz a função &lt;code&gt;facet_grid()&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;personalizando&#34;&gt;Personalizando&lt;/h2&gt;

&lt;p&gt;Como exemplo de personalização de um gráfico com o &lt;code&gt;ggplot2&lt;/code&gt;, vamos partir de um simples boxplot e fazer diversas alterações nas legendas.&lt;/p&gt;

&lt;p&gt;Para isso, utilizaremos nessa seção a base contida no objeto &lt;code&gt;PlantGrowth&lt;/code&gt;, contendo resultados de um experimento para comparar o crescimento de plantas sob três condições diferentes (um controle e dois tratamentos). Para mais informações, rode &lt;code&gt;help(PlantGrowth)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;O gráfico inicial é construído da seguinte forma:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp &amp;lt;- ggplot(data = PlantGrowth, aes(x = group, y = weight, fill = group)) +
  geom_boxplot()

bp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-24-1.png&#34; title=&#34;plot of chunk unnamed-chunk-24&#34; alt=&#34;plot of chunk unnamed-chunk-24&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;removendo-totalmente-a-legenda&#34;&gt;Removendo totalmente a legenda&lt;/h3&gt;

&lt;p&gt;Existem diversas maneiras para remover a legenda de um gráfico no &lt;code&gt;ggplot2&lt;/code&gt;. A forma mais simples é usar &lt;code&gt;guides(fill = FALSE)&lt;/code&gt; com &lt;code&gt;fill&lt;/code&gt; sendo o atributo gráfico do qual você deseja remover a legenda.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + guides(fill = FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-25-1.png&#34; title=&#34;plot of chunk unnamed-chunk-25&#34; alt=&#34;plot of chunk unnamed-chunk-25&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Também é possível remover a legenda utilizando a função &lt;code&gt;scale_fill_discrite()&lt;/code&gt;. A família &lt;code&gt;scale_X_Y()&lt;/code&gt; de funções permite escolher manualmente os parâmetros de cada escala utilizada no gráfico.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + scale_fill_discrete(guide = F)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-26-1.png&#34; title=&#34;plot of chunk unnamed-chunk-26&#34; alt=&#34;plot of chunk unnamed-chunk-26&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;O comando a seguir remove todas as legendas, não importa o atributo que ela esteja representando.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + theme(legend.position=&amp;quot;none&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-27-1.png&#34; title=&#34;plot of chunk unnamed-chunk-27&#34; alt=&#34;plot of chunk unnamed-chunk-27&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;alterando-a-ordem-dos-itens&#34;&gt;Alterando a ordem dos itens&lt;/h3&gt;

&lt;p&gt;Para alterar a ordem dos itens na legenda do gráfico no &lt;code&gt;ggplot2&lt;/code&gt;, usamos o comando da escala de cores.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + scale_fill_discrete(breaks=c(&amp;quot;trt1&amp;quot;, &amp;quot;ctrl&amp;quot;, &amp;quot;trt2&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-28-1.png&#34; title=&#34;plot of chunk unnamed-chunk-28&#34; alt=&#34;plot of chunk unnamed-chunk-28&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-28-2.png&#34; title=&#34;plot of chunk unnamed-chunk-28&#34; alt=&#34;plot of chunk unnamed-chunk-28&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Dependendo dos aspectos gráficos (cores, formatos, preenchimentos) especificados, você pode precisar usar alguma das seguintes funções:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scale_fill_manual()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scale_colour_hue()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scale_colour_manual()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scale_shape_discrete()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scale_linetype_discrete()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Você pode também querer inverter a ordem dos itens da legenda. Isso pode ser feito de uma das seguintes maneiras.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + guides(fill = guide_legend(reverse = TRUE))
bp + scale_fill_discrete(guide = guide_legend(reverse = TRUE))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-29-1.png&#34; title=&#34;plot of chunk unnamed-chunk-29&#34; alt=&#34;plot of chunk unnamed-chunk-29&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;img src=&#34;figures//unnamed-chunk-29-2.png&#34; title=&#34;plot of chunk unnamed-chunk-29&#34; alt=&#34;plot of chunk unnamed-chunk-29&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;removendo-os-títulos-da-legenda&#34;&gt;Removendo os títulos da legenda&lt;/h3&gt;

&lt;p&gt;Algumas vezes é necessário remover o título das legendas do gráfico feito no &lt;code&gt;ggplot2&lt;/code&gt;. Veja a seguir algumas maneiras:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Remove o título apenas da legenda do preenchimento (fill).
bp + guides(fill=guide_legend(title=NULL))

# Remove o título de todas as legendas.
bp + theme(legend.title = element_blank())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-30-1.png&#34; title=&#34;plot of chunk unnamed-chunk-30&#34; alt=&#34;plot of chunk unnamed-chunk-30&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;img src=&#34;figures//unnamed-chunk-30-2.png&#34; title=&#34;plot of chunk unnamed-chunk-30&#34; alt=&#34;plot of chunk unnamed-chunk-30&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;modificando-texto-cores-e-rótulos&#34;&gt;Modificando texto, cores e rótulos&lt;/h3&gt;

&lt;p&gt;Existem duas formas para modificar os textos e rótulos das legendas. Uma delas é modificar o &lt;code&gt;data.frame&lt;/code&gt; de forma com que os fatores tenham o mesmo nome que você deseja na legenda. Outra forma é usando as funções &lt;code&gt;scale_X_Y()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;No nosso exemplo, como a variável &lt;code&gt;group&lt;/code&gt; está associada ao atributo &lt;code&gt;fill&lt;/code&gt;, usamos as funções &lt;code&gt;scale_fill_discrete()&lt;/code&gt;. e &lt;code&gt;scale_fill_manual()&lt;/code&gt;. Utilizamos a primeira se não quisermos alterar as cores padrão, mas sim que cada fator esteja associado uma cor diferente. Mudamos também os rótolos e o título da legenda.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + scale_fill_discrete(name = &amp;quot;Experimental\nCondition&amp;quot;,
                         breaks = c(&amp;quot;ctrl&amp;quot;, &amp;quot;trt1&amp;quot;, &amp;quot;trt2&amp;quot;),
                         labels = c(&amp;quot;Control&amp;quot;, &amp;quot;Treatment 1&amp;quot;, &amp;quot;Treatment 2&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-31-1.png&#34; title=&#34;plot of chunk unnamed-chunk-31&#34; alt=&#34;plot of chunk unnamed-chunk-31&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Usamos a segunda se quisermos alterar as cores padrão. Aqui, escolhemos as cores da escala hexadecimal. Veja que isso não aletrou o eixo x do gráfico.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + scale_fill_manual(values=c(&amp;quot;#999999&amp;quot;, &amp;quot;#E69F00&amp;quot;, &amp;quot;#56B4E9&amp;quot;), 
                       name=&amp;quot;Experimental\nCondition&amp;quot;,
                       breaks=c(&amp;quot;ctrl&amp;quot;, &amp;quot;trt1&amp;quot;, &amp;quot;trt2&amp;quot;),
                       labels=c(&amp;quot;Control&amp;quot;, &amp;quot;Treatment 1&amp;quot;, &amp;quot;Treatment 2&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-32-1.png&#34; title=&#34;plot of chunk unnamed-chunk-32&#34; alt=&#34;plot of chunk unnamed-chunk-32&#34; width=&#34;50%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;modificando-a-aparência-da-legenda&#34;&gt;Modificando a aparência da legenda&lt;/h3&gt;

&lt;p&gt;Existem inúmeras modificações que podem ser realizadas na aparência da legenda. Todas elas estão relacionadas à modificação do &lt;code&gt;element_text()&lt;/code&gt;. Veja neste &lt;a href=&#34;http://docs.ggplot2.org/0.9.2.1/element_text.html&#34;&gt;link&lt;/a&gt; todos os atributos que podem ser modificados.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Mudando a aparência do título
bp + theme(legend.title = element_text(color = &amp;quot;blue&amp;quot;, size = 16, face = &amp;quot;bold&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-33-1.png&#34; title=&#34;plot of chunk unnamed-chunk-33&#34; alt=&#34;plot of chunk unnamed-chunk-33&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Mudando a aparência dos rótulos
bp + theme(legend.text = element_text(colour = &amp;quot;blue&amp;quot;, size = 16, face = &amp;quot;bold&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-34-1.png&#34; title=&#34;plot of chunk unnamed-chunk-34&#34; alt=&#34;plot of chunk unnamed-chunk-34&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;modificando-a-posição-da-legenda&#34;&gt;Modificando a posição da legenda&lt;/h3&gt;

&lt;p&gt;É possível controlar a posição da legenda facilmente escolhendo uma das posições:  &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt; e &lt;code&gt;bottom&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + theme(legend.position=&amp;quot;top&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-35-1.png&#34; title=&#34;plot of chunk unnamed-chunk-35&#34; alt=&#34;plot of chunk unnamed-chunk-35&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Também é possível controlar a posição da legenda de forma precisa usando a função &lt;code&gt;theme()&lt;/code&gt;. A legenda será posicionada dentro do gráfico com o ponto central sendo o valor do argumento &lt;code&gt;legend.position=&lt;/code&gt;. Esses valores são definidos de forma que o ponto (0,0) seja o canto inferior esquerdo e (1,1) seja o canto superior direito.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;bp + theme(legend.position=c(.5, .5))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-36-1.png&#34; title=&#34;plot of chunk unnamed-chunk-36&#34; alt=&#34;plot of chunk unnamed-chunk-36&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;exercícios&#34;&gt;Exercícios&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O que tem de errado no código abaixo? Por que os pontos não ficaram azuis?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy, color = &amp;quot;blue&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;figures//unnamed-chunk-37-1.png&#34; title=&#34;plot of chunk unnamed-chunk-37&#34; alt=&#34;plot of chunk unnamed-chunk-37&#34; width=&#34;40%&#34; height=&#34;40%&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mapeie uma variável contínua para uma cor, tamanho e forma. Como essas formas
estéticas se comportam diferente para variáveis categóricas vs contínuas?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O que acontece se você rodar &lt;code&gt;ggplot(data = mtcars)&lt;/code&gt;?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Utilizando o &lt;code&gt;mtcars&lt;/code&gt;, faça um gráfico de dispersão de &lt;code&gt;mpg&lt;/code&gt; por &lt;code&gt;qsec&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Utilizando o &lt;code&gt;mtcars&lt;/code&gt;, o que acontece se você fizer um gráfico de dispersão de &lt;code&gt;vs&lt;/code&gt; por &lt;code&gt;mpg&lt;/code&gt;? Por que o gráfico não é útil?&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
  </channel>
</rss>