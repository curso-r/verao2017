<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HI</title>
    <link>/index.xml</link>
    <description>Recent content on HI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Tue, 08 Mar 2016 21:07:13 +0100</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Curso R</title>
      <link>/</link>
      <pubDate>Tue, 08 Mar 2016 21:07:13 +0100</pubDate>
      
      <guid>/</guid>
      <description>&lt;p&gt;Site para o curso de ver√£o sobre R.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>/hello-world/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/hello-world/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;#####../content/hello-world/index_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>/post/hello-world/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/hello-world/</guid>
      <description>&lt;!-- BLOGDOWN-BODY-BEFORE

/BLOGDOWN-BODY-BEFORE --&gt;

&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;#####../content/post/hello-world_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;!-- BLOGDOWN-HEAD






/BLOGDOWN-HEAD --&gt;
</description>
    </item>
    
    <item>
      <title>Getting started</title>
      <link>/getting-started/</link>
      <pubDate>Wed, 09 Mar 2016 00:11:02 +0100</pubDate>
      
      <guid>/getting-started/</guid>
      <description>

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;h3 id=&#34;installing-hugo&#34;&gt;Installing Hugo&lt;/h3&gt;

&lt;p&gt;Hugo itself is just a single binary without dependencies on expensive runtimes like Ruby, Python or PHP and without dependencies on any databases. You just need to download the &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;latest version&lt;/a&gt;. For more information read the official &lt;a href=&#34;http://gohugo.io/overview/installing/&#34;&gt;installation guides&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s make sure Hugo is set up as expected. You should see a similar version number in your terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hugo version
# Hugo Static Site Generator v0.15 BuildDate: 2016-01-03T12:47:47+01:00
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;installing-material&#34;&gt;Installing Material&lt;/h3&gt;

&lt;p&gt;Next, assuming you have Hugo up and running the &lt;code&gt;hugo-material-docs&lt;/code&gt; theme can be installed with &lt;code&gt;git&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# create a new Hugo website
hugo new site my-awesome-docs

# move into the themes folder of your website
cd my-awesome-docs/themes/

# download the theme
git clone git@github.com:digitalcraftsman/hugo-material-docs.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;setup&#34;&gt;Setup&lt;/h2&gt;

&lt;p&gt;Next, take a look in the &lt;code&gt;exampleSite&lt;/code&gt; folder at &lt;code&gt;themes/hugo-material-docs/&lt;/code&gt;. This directory contains an example config file and the content that you are currently reading. It serves as an example setup for your documentation.&lt;/p&gt;

&lt;p&gt;Copy at least the &lt;code&gt;config.toml&lt;/code&gt; in the root directory of your website. Overwrite the existing config file if necessary.&lt;/p&gt;

&lt;p&gt;Hugo includes a development server, so you can view your changes as you go -
very handy. Spin it up with the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can go to &lt;a href=&#34;http://localhost:1313&#34;&gt;localhost:1313&lt;/a&gt; and the Material
theme should be visible. You can now start writing your documentation, or read
on and customize the theme through some options.&lt;/p&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;Before you are able to deploy your documentation you should take a few minute to adjust some information in the &lt;code&gt;config.toml&lt;/code&gt;. Open the file in an editor:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;baseurl = &amp;quot;http://replace-this-with-your-hugo-site.com/&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;Material Docs&amp;quot;

[params]
  # General information
  author = &amp;quot;Digitalcraftsman&amp;quot;
  description = &amp;quot;A material design theme for documentations.&amp;quot;
  copyright = &amp;quot;Released under the MIT license&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;options&#34;&gt;Options&lt;/h2&gt;

&lt;h3 id=&#34;github-integration&#34;&gt;Github integration&lt;/h3&gt;

&lt;p&gt;If your project is hosted on GitHub, add the repository link to the
configuration. If the &lt;code&gt;provider&lt;/code&gt; equals &lt;strong&gt;GitHub&lt;/strong&gt;, the Material theme will
add a download and star button, and display the number of stars:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params]
  # Repository
  provider = &amp;quot;GitHub&amp;quot;
  repo_url = &amp;quot;https://github.com/digitalcraftsman/hugo-material-docs&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;adding-a-version&#34;&gt;Adding a version&lt;/h3&gt;

&lt;p&gt;In order to add the current version next to the project banner inside the
drawer, you can set the variable &lt;code&gt;version&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params]
  version = &amp;quot;1.0.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will also change the link behind the download button to point to the
archive with the respective version on GitHub, assuming a release tagged with
this exact version identifier.&lt;/p&gt;

&lt;h3 id=&#34;adding-a-logo&#34;&gt;Adding a logo&lt;/h3&gt;

&lt;p&gt;If your project has a logo, you can add it to the drawer/navigation by defining
the variable &lt;code&gt;logo&lt;/code&gt;. Ideally, the image of your logo should have
rectangular shape with a minimum resolution of 128x128 and leave some room
towards the edges. The logo will also be used as a web application icon on iOS.
Save your logo somewhere in the &lt;code&gt;static/&lt;/code&gt; folder and reference the file relative to this location:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params]
  logo = &amp;quot;images/logo.png&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;adding-a-custom-favicon&#34;&gt;Adding a custom favicon&lt;/h3&gt;

&lt;p&gt;Favicons are small small icons that are displayed in the tabs right next to the title of the current page. As with the logo above you need to save your favicon in &lt;code&gt;static/&lt;/code&gt; and link it relative to this folder in the config file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params]
  favicon = &amp;quot;favicon.ico&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;google-analytics&#34;&gt;Google Analytics&lt;/h3&gt;

&lt;p&gt;You can enable Google Analytics by replacing &lt;code&gt;UA-XXXXXXXX-X&lt;/code&gt; with your own tracking code.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;googleAnalytics = &amp;quot;UA-XXXXXXXX-X&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;small-tweaks&#34;&gt;Small tweaks&lt;/h3&gt;

&lt;p&gt;This theme provides a simple way for making small adjustments, that is changing
some margins, centering text, etc. Simply put the CSS and Javascript files that
contain your adjustments in the &lt;code&gt;static/&lt;/code&gt; directory (ideally in subdirectories of their own) and include them via the &lt;code&gt;custom_css&lt;/code&gt; and &lt;code&gt;custom_js&lt;/code&gt;
variables in your &lt;code&gt;config.toml&lt;/code&gt;. Reference the files relative to &lt;code&gt;static/&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params]
  # Custom assets
  custom_css = [
    &amp;quot;foo.css&amp;quot;,
    &amp;quot;bar.css&amp;quot;
  ]

  custom_js  = [&amp;quot;buzz.js&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;changing-the-color-palette&#34;&gt;Changing the color palette&lt;/h3&gt;

&lt;p&gt;Material defines a default hue for every primary and accent color on Google&amp;rsquo;s
material design [color palette][]. This makes it very easy to change the overall look of the theme. Just set the variables &lt;code&gt;palette.primary&lt;/code&gt; and &lt;code&gt;palette.accent&lt;/code&gt; to one of the colors defined in the palette:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params.palette]
  primary = &amp;quot;red&amp;quot;
  accent  = &amp;quot;light-green&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Color names can be written upper- or lowercase but must match the names of the
material design &lt;a href=&#34;http://www.materialui.co/colors&#34;&gt;color palette&lt;/a&gt;. Valid values are: &lt;em&gt;red&lt;/em&gt;, &lt;em&gt;pink&lt;/em&gt;, &lt;em&gt;purple&lt;/em&gt;, &lt;em&gt;deep purple&lt;/em&gt;, &lt;em&gt;indigo&lt;/em&gt;, &lt;em&gt;blue&lt;/em&gt;, &lt;em&gt;light-blue&lt;/em&gt;, &lt;em&gt;cyan&lt;/em&gt;, &lt;em&gt;teal&lt;/em&gt;, &lt;em&gt;green&lt;/em&gt;, &lt;em&gt;light-green&lt;/em&gt;,
&lt;em&gt;lime&lt;/em&gt;, &lt;em&gt;yellow&lt;/em&gt;, &lt;em&gt;amber&lt;/em&gt;, &lt;em&gt;orange&lt;/em&gt;, &lt;em&gt;deep-orange&lt;/em&gt;, &lt;em&gt;brown&lt;/em&gt;, &lt;em&gt;grey&lt;/em&gt; and
&lt;em&gt;blue-grey&lt;/em&gt;. The last three colors can only be used as a primary color.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/images/colors.png&#34; alt=&#34;Color palette&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If the color is set via this configuration, an additional CSS file called
&lt;code&gt;palettes.css&lt;/code&gt; is included that defines the color palettes.&lt;/p&gt;

&lt;h3 id=&#34;changing-the-font-family&#34;&gt;Changing the font family&lt;/h3&gt;

&lt;p&gt;Material uses the &lt;a href=&#34;http://font.ubuntu.com&#34;&gt;Ubuntu font family&lt;/a&gt; by default, specifically the regular sans-serif type for text and the monospaced type for code. Both fonts are loaded from &lt;a href=&#34;https://www.google.com/fonts&#34;&gt;Google Fonts&lt;/a&gt; and can be easily changed to other fonts, like for example Google&amp;rsquo;s own &lt;a href=&#34;https://www.google.com/fonts/specimen/Roboto&#34;&gt;Roboto font&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params.font]
  text = &amp;quot;Roboto&amp;quot;
  code = &amp;quot;Roboto Mono&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The text font will be loaded in font-weights 400 and &lt;strong&gt;700&lt;/strong&gt;, the monospaced
font in regular weight.&lt;/p&gt;

&lt;h3 id=&#34;syntax-highlighting&#34;&gt;Syntax highlighting&lt;/h3&gt;

&lt;p&gt;This theme uses the popular &lt;a href=&#34;https://highlightjs.org/&#34;&gt;Highlight.js&lt;/a&gt; library to colorize code examples. The default theme is called &lt;code&gt;Github&lt;/code&gt; with a few small tweaks. You can link our own theme if you like. Again, store your stylesheet in the &lt;code&gt;static/&lt;/code&gt; folder and set the relative path in the config file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params]
  # Syntax highlighting theme
  highlight_css  = &amp;quot;path/to/theme.css&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;adding-a-github-and-twitter-account&#34;&gt;Adding a GitHub and Twitter account&lt;/h3&gt;

&lt;p&gt;If you have a GitHub and/or Twitter account, you can add links to your
accounts to the drawer by setting the variables &lt;code&gt;github&lt;/code&gt; and
&lt;code&gt;twitter&lt;/code&gt; respectively:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[social]
  twitter = &amp;quot;&amp;quot;
  github  = &amp;quot;digitalcraftsman&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;adding-menu-entries&#34;&gt;Adding menu entries&lt;/h3&gt;

&lt;p&gt;Once you created your first content files you can link them manually in the sidebar on the left. A menu entry has the following schema:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[[menu.main]]
  name   = &amp;quot;Material&amp;quot;
  url    = &amp;quot;/&amp;quot;
  weight = 0
  pre    = &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;name&lt;/code&gt; is the title displayed in the menu and &lt;code&gt;url&lt;/code&gt; the relative URL to the content. The &lt;code&gt;weight&lt;/code&gt; attribute allows you to modify the order of the menu entries. A menu entry appears further down the more weight you add. The &lt;code&gt;pre&lt;/code&gt; attribute is optional and allows you to *pre*pend elements to a menu link, e.g. an icon.&lt;/p&gt;

&lt;p&gt;Instead of just linking a single file you can enhance the sidebar by creating a nested menu. This way you can list all pages of a section instead of linking them one by one (without nesting).&lt;/p&gt;

&lt;p&gt;You need extend the frontmatter of each file content file in a section slightly. The snippet below registers this content file as &amp;lsquo;child&amp;rsquo; of a menu entry that already exists.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;menu:
  main:
    parent: Material
    identifier: &amp;lt;link name&amp;gt;
    weight: 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;main&lt;/code&gt; specifies to which menu the content file should be added. &lt;code&gt;main&lt;/code&gt; is the only menu in this theme by default. &lt;code&gt;parent&lt;/code&gt; let&amp;rsquo;s you register this content file to an existing menu entry, in this case the &lt;code&gt;Material&lt;/code&gt; link. Note that the parent in the frontmatter needs to match the name in &lt;code&gt;config.toml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;identifier&lt;/code&gt; is the link that is shown in the menu. Ideally you choose the same name for the &lt;code&gt;identifier&lt;/code&gt; and the &lt;code&gt;title&lt;/code&gt; of the page. Again, &lt;code&gt;weight&lt;/code&gt; allows you to change the order of the nested links in a section.&lt;/p&gt;

&lt;h3 id=&#34;markdown-extensions&#34;&gt;Markdown extensions&lt;/h3&gt;

&lt;p&gt;Hugo uses &lt;a href=&#34;https://github.com/russross/blackfriday&#34;&gt;Blackfriday&lt;/a&gt; to process your content. For a detailed description of all options take a look at the &lt;a href=&#34;http://gohugo.io/overview/configuration/#configure-blackfriday-rendering&#34;&gt;Blackfriday configuration&lt;/a&gt; section in the Hugo documentation.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[blackfriday]
  smartypants = true
  fractions = true
  smartDashes = true
  plainIDAnchors = true
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Adding content</title>
      <link>/adding-content/</link>
      <pubDate>Wed, 09 Mar 2016 19:56:50 +0100</pubDate>
      
      <guid>/adding-content/</guid>
      <description>

&lt;h2 id=&#34;hello-world&#34;&gt;Hello world&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s create our first content file for your documentation. Open a terminal and add the following command for each new file you want to add. Replace &lt;code&gt;&amp;lt;section-name&amp;gt;&lt;/code&gt; with a general term that describes your document in detail.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hugo new &amp;lt;section-name&amp;gt;/filename.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Visitors of your website will find the final document under &lt;code&gt;www.example.com/&amp;lt;section-name&amp;gt;/filename/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since it&amp;rsquo;s possible to have multiple content files in the same section I recommend to create at least one &lt;code&gt;index.md&lt;/code&gt; file per section. This ensures that users will find an index page under &lt;code&gt;www.example.com/&amp;lt;section-name&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;homepage&#34;&gt;Homepage&lt;/h2&gt;

&lt;p&gt;To add content to the homepage you need to add a small indicator to the frontmatter of the content file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;type: index
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otherwise the theme will not be able to find the corresponding content file.&lt;/p&gt;

&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of contents&lt;/h2&gt;

&lt;p&gt;You maybe noticed that the menu on the left contains a small table of contents of the current page. All &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; tags (&lt;code&gt;## Headline&lt;/code&gt; in Markdown) will be added automatically.&lt;/p&gt;

&lt;h2 id=&#34;admonitions&#34;&gt;Admonitions&lt;/h2&gt;

&lt;p&gt;Admonition is a handy feature that adds block-styled side content to your documentation, for example hints, notes or warnings. It can be enabled by using the corresponding &lt;a href=&#34;http://gohugo.io/extras/shortcodes/&#34;&gt;shortcodes&lt;/a&gt; inside your content:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;{{&amp;lt; note title=&amp;quot;Note&amp;quot; &amp;gt;}}
Nothing to see here, move along.
{{&amp;lt; /note &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will print the following block:&lt;/p&gt;

&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt;
&lt;p&gt;Nothing to see here, move along.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;The shortcode adds a neutral color for the note class and a red color for the warning class. You can also add a custom title:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;{{&amp;lt; warning title=&amp;quot;Don&#39;t try this at home&amp;quot; &amp;gt;}}
Nothing to see here, move along.
{{&amp;lt; /warning &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will print the following block:&lt;/p&gt;

&lt;div class=&#34;admonition warning&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Don&amp;#39;t try this at home&lt;/p&gt;
&lt;p&gt;Nothing to see here, move along.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Roadmap</title>
      <link>/roadmap/</link>
      <pubDate>Wed, 09 Mar 2016 20:08:11 +0100</pubDate>
      
      <guid>/roadmap/</guid>
      <description>

&lt;p&gt;Quo vadis? The port of the original &lt;a href=&#34;https://github.com/squidfunk/mkdocs-material&#34;&gt;Material theme&lt;/a&gt; has replicated nearly all of its features. A few are still missing but I&amp;rsquo;ve good news: the Hugo community is actively working on this issues. Maybe with the next release of Hugo we can abandon this list. Stay tuned.&lt;/p&gt;

&lt;h2 id=&#34;localization&#34;&gt;Localization&lt;/h2&gt;

&lt;p&gt;Currently, it is possible to collect all strings in a single place for easy customization. However, this only enables you to define all strings in a single language. This approach is quite limiting in terms of localization support. Therefore, I decided to wait for a native integration. This way we can avoid a second setup of all strings in your website.&lt;/p&gt;

&lt;p&gt;Keep an eye on &lt;a href=&#34;https://github.com/spf13/hugo/issues/1734&#34;&gt;#1734&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;search&#34;&gt;Search&lt;/h2&gt;

&lt;p&gt;Beside third-party services, some hacky workarounds and Grunt-/Gulp-based scripts that only require unnecessary dependencies, future versions of Hugo will support the generation of a content index as a core feature.&lt;/p&gt;

&lt;p&gt;This approach plays well with this theme since MkDocs does the same.&lt;/p&gt;

&lt;p&gt;Keep an eye on &lt;a href=&#34;https://github.com/spf13/hugo/pull/1853&#34;&gt;#1853&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;contributing&#34;&gt;Contributing&lt;/h2&gt;

&lt;p&gt;Did you found an bug or you would like to suggest a new feature? I&amp;rsquo;m open for feedback. Please open a new &lt;a href=&#34;https://github.com/digitalcraftsman/hugo-material-docs/issues&#34;&gt;issue&lt;/a&gt; and let me know.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;re also welcome to contribute with &lt;a href=&#34;https://github.com/digitalcraftsman/hugo-material-docs/pulls&#34;&gt;pull requests&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>License</title>
      <link>/license/</link>
      <pubDate>Wed, 09 Mar 2016 20:10:46 +0100</pubDate>
      
      <guid>/license/</guid>
      <description>&lt;p&gt;Copyright &amp;copy; 2016 Digitalcraftsman &lt;a href=&#34;mailto:digitalcraftsman@protonmail.com&#34;&gt;digitalcraftsman@protonmail.com&lt;/a&gt;&lt;br&gt;
Copyright &amp;copy; 2016 Martin Donath &lt;a href=&#34;mailto:martin.donath@squidfunk.com&#34;&gt;martin.donath@squidfunk.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to
deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:&lt;/p&gt;

&lt;p&gt;The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.&lt;/p&gt;

&lt;p&gt;THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
IN THE SOFTWARE.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>